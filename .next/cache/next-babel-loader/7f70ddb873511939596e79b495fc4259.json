{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid'; // Component\n\nimport Dialog from '@material-ui/core/Dialog'; // Redux\n\nimport ButtonMain from './ButtonMain';\nexport var CustomDialog = /*#__PURE__*/function (_Component) {\n  _inherits(CustomDialog, _Component);\n\n  var _super = _createSuper(CustomDialog);\n\n  function CustomDialog(props) {\n    var _this;\n\n    _classCallCheck(this, CustomDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(CustomDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        open: this.props.open\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(method) {\n      this.setState({\n        open: false\n      });\n      method();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          title = _this$props.title,\n          content = _this$props.content,\n          onConfirm = _this$props.onConfirm,\n          onCancel = _this$props.onCancel,\n          cancelText = _this$props.cancelText,\n          confirmText = _this$props.confirmText,\n          mode = _this$props.mode,\n          block = _this$props.block;\n      return __jsx(Dialog, {\n        open: this.state.open,\n        fullWidth: true,\n        maxWidth: \"xs\",\n        onClose: function onClose() {\n          return _this2.setState({\n            open: false\n          });\n        },\n        disableBackdropClick: block\n      }, __jsx(\"div\", {\n        className: \"txt-center-hoz padding-16\"\n      }, __jsx(\"p\", {\n        className: \"font-muli-14 bold margin-btm-16\"\n      }, title), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\"\n      }, content), __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        spacing: 1\n      }, __jsx(Grid, {\n        item: true,\n        xs: mode === 'vertical' ? 12 : 6\n      }, cancelText ? __jsx(ButtonMain, {\n        id: \"btnClose\",\n        onClick: function onClick() {\n          return _this2.onClick(onCancel);\n        },\n        color: \"secondary\",\n        width: \"fullWidth\"\n      }, cancelText) : null), __jsx(Grid, {\n        item: true,\n        xs: mode === 'vertical' ? 12 : 6\n      }, __jsx(ButtonMain, {\n        id: \"btnNext\",\n        onClick: function onClick() {\n          return _this2.onClick(onConfirm);\n        },\n        color: \"primary\",\n        width: \"fullWidth\"\n      }, confirmText)))));\n    }\n  }]);\n\n  return CustomDialog;\n}(Component);\nexport default CustomDialog;","map":null,"metadata":{},"sourceType":"module"}