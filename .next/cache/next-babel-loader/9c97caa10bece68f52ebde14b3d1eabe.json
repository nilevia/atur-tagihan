{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Router from 'next/router'; // Material\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'; // Component\n\nimport { connect } from 'react-redux';\nimport MainLogo from '../../components/global-component/MainLogo';\nimport { showSnackbar } from '../../redux/snackbar/action';\nimport { BlockDialog } from '../../components/global-component/BlockDialog';\nimport { AuthNetworkCall } from '../../utils/NetworkCall';\nimport { featureEnable } from '../../utils/Flagr'; // redux / network\n\nexport class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      userProfile: {\n        name: 'User Bayar Tagihan',\n        nick_name: 'User',\n        picture: '/icon/ic_default_product.svg',\n        email: 'info@bayartagihan.id'\n      },\n      editProfile: false\n    };\n  }\n\n  async componentDidMount() {\n    document.body.className = 'body-blue';\n    this.getProfile();\n    this.setState({\n      editProfile: await featureEnable(4)\n    });\n  }\n\n  componentWillUnmount() {\n    document.body.className = null;\n  }\n  /**\n   * @summary get user profile and save as state\n   * @returns {Promise<void>}\n   */\n\n\n  async getProfile() {\n    this.setState({\n      isLoading: true\n    });\n    const result = await AuthNetworkCall('/customer/profile', 'get', this.props.showSnackbar);\n    this.setState({\n      isLoading: false\n    });\n\n    if (result) {\n      this.setState({\n        userProfile: result\n      });\n    }\n  }\n  /**\n   * @summary call delete method at BE to remove existing user\n   * then clear storage and redirect to beranda\n   * @returns {Promise<void>}\n   */\n\n\n  async onLogout() {\n    this.setState({\n      isLoading: true\n    });\n    const result = await AuthNetworkCall('/customer/auth/social_login/google', 'delete', this.props.showSnackbar);\n    this.setState({\n      isLoading: false\n    });\n\n    if (result) {\n      localStorage.clear();\n      await Router.push('/');\n    }\n  }\n\n  render() {\n    const {\n      userProfile,\n      isLoading,\n      editProfile\n    } = this.state;\n    return __jsx(\"div\", {\n      id: \"profile\"\n    }, __jsx(MainLogo, null), __jsx(\"div\", {\n      className: \"main-content\"\n    }, __jsx(\"span\", {\n      className: \"font-muli-12 right-top txt-center-ver flex white\"\n    }, __jsx(\"b\", null, \"Halo, \\xA0\"), userProfile.nick_name, \"\\xA0\", __jsx(AccountCircleIcon, null)), __jsx(Paper, {\n      className: \"padding-22\"\n    }, __jsx(\"div\", {\n      className: \"flex txt-center-ver margin-btm-16\"\n    }, __jsx(\"img\", {\n      alt: \"pic\",\n      src: userProfile.picture,\n      height: 35\n    }), __jsx(\"div\", {\n      className: \"margin-rgt-16 margin-left-16\"\n    }, __jsx(\"p\", {\n      className: \"font-muli-14\"\n    }, userProfile.name), __jsx(\"p\", {\n      className: \"font-muli-12 grey\"\n    }, userProfile.email))), __jsx(Divider, null), editProfile ? __jsx(\"p\", {\n      className: \"font-muli-14 dark-blue margin-top-16\"\n    }, \"Edit Profile\") : null), __jsx(Paper, {\n      className: \"padding-16 margin-top-16 flex pointer\",\n      onClick: () => Router.push('/riwayat')\n    }, __jsx(\"p\", {\n      className: \"font-muli-14\"\n    }, \"Riwayat pembelian\"), __jsx(ChevronRightIcon, {\n      className: \"margin-lft-auto blue\"\n    })), __jsx(Paper, {\n      id: \"logoutBtn\",\n      className: \"padding-16 margin-top-16 flex pointer\",\n      onClick: () => this.onLogout()\n    }, __jsx(\"p\", {\n      className: \"font-muli-14\"\n    }, \"Logout\"), __jsx(ExitToAppIcon, {\n      className: \"margin-lft-auto blue\"\n    }))), __jsx(BlockDialog, {\n      isOpen: isLoading\n    }));\n  }\n\n}\nconst mapDispatchToProps = {\n  showSnackbar\n};\nexport default connect(null, mapDispatchToProps)(Profile);","map":null,"metadata":{},"sourceType":"module"}