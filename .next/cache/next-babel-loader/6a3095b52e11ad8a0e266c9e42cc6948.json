{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { isNotUndefined } from './Validator';\nimport { showSnackbar } from '../redux/snackbar/action';\nexport default async function CommonNetworkCall(path, method, data = '', headers = {}) {\n  const dispatch = useDispatch();\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  let _axios;\n\n  switch (method) {\n    case 'get':\n      _axios = axios.get(url);\n      break;\n\n    case 'post':\n      _axios = axios.post(url, data, {\n        headers\n      });\n      break;\n\n    case 'delete':\n      _axios = axios.delete(url, {\n        headers\n      });\n      break;\n\n    case 'put':\n      _axios = axios.put(url, data, {\n        headers\n      });\n      break;\n\n    default:\n      _axios = axios();\n  }\n\n  await _axios.then(async apiResponse => {\n    const {\n      response,\n      result\n    } = apiResponse.data;\n\n    if (response.code !== '000000') {\n      dispatch(showSnackbar('Terjadi Gangguan', 'error'));\n      return null;\n    }\n\n    return result;\n  }).catch(async error => {\n    if (isNotUndefined(error.response)) {\n      const {\n        data\n      } = error.response;\n      dispatch(showSnackbar(data.response.user_errors, 'error'));\n    } else {\n      dispatch(showSnackbar(error.toString(), 'error'));\n    }\n\n    return null;\n  });\n}","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/utils/CommonNetworkCall.js"],"names":["React","axios","useDispatch","isNotUndefined","showSnackbar","CommonNetworkCall","path","method","data","headers","dispatch","BASE_URL","process","env","NEXT_PUBLIC_API_BASE_URL","url","_axios","get","post","delete","put","then","apiResponse","response","result","code","catch","error","user_errors","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,eAAe,eAAeC,iBAAf,CAAiCC,IAAjC,EAAuCC,MAAvC,EAA+CC,IAAI,GAAG,EAAtD,EAA0DC,OAAO,GAAG,EAApE,EAAwE;AACrF,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAA7B;AACA,QAAMC,GAAG,GAAI,GAAEJ,QAAS,GAAEL,IAAK,EAA/B;;AAEA,MAAIU,MAAJ;;AACA,UAAQT,MAAR;AACE,SAAK,KAAL;AACES,MAAAA,MAAM,GAAGf,KAAK,CAACgB,GAAN,CAAUF,GAAV,CAAT;AACA;;AACF,SAAK,MAAL;AACEC,MAAAA,MAAM,GAAGf,KAAK,CAACiB,IAAN,CAAWH,GAAX,EAAgBP,IAAhB,EAAsB;AAAEC,QAAAA;AAAF,OAAtB,CAAT;AACA;;AACF,SAAK,QAAL;AACEO,MAAAA,MAAM,GAAGf,KAAK,CAACkB,MAAN,CAAaJ,GAAb,EAAkB;AAAEN,QAAAA;AAAF,OAAlB,CAAT;AACA;;AACF,SAAK,KAAL;AACEO,MAAAA,MAAM,GAAGf,KAAK,CAACmB,GAAN,CAAUL,GAAV,EAAeP,IAAf,EAAqB;AAAEC,QAAAA;AAAF,OAArB,CAAT;AACA;;AACF;AACEO,MAAAA,MAAM,GAAGf,KAAK,EAAd;AAdJ;;AAgBA,QAAMe,MAAM,CACTK,IADG,CACE,MAAOC,WAAP,IAAuB;AAC3B,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuBF,WAAW,CAACd,IAAzC;;AAEA,QAAIe,QAAQ,CAACE,IAAT,KAAkB,QAAtB,EAAgC;AAC9Bf,MAAAA,QAAQ,CAACN,YAAY,CAAC,kBAAD,EAAqB,OAArB,CAAb,CAAR;AACA,aAAO,IAAP;AACD;;AACD,WAAOoB,MAAP;AACD,GATG,EAUHE,KAVG,CAUG,MAAOC,KAAP,IAAiB;AACtB,QAAIxB,cAAc,CAACwB,KAAK,CAACJ,QAAP,CAAlB,EAAoC;AAClC,YAAM;AAAEf,QAAAA;AAAF,UAAWmB,KAAK,CAACJ,QAAvB;AACAb,MAAAA,QAAQ,CAACN,YAAY,CAACI,IAAI,CAACe,QAAL,CAAcK,WAAf,EAA4B,OAA5B,CAAb,CAAR;AACD,KAHD,MAGO;AACLlB,MAAAA,QAAQ,CAACN,YAAY,CAACuB,KAAK,CAACE,QAAN,EAAD,EAAmB,OAAnB,CAAb,CAAR;AACD;;AACD,WAAO,IAAP;AACD,GAlBG,CAAN;AAmBD","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { isNotUndefined } from './Validator';\nimport { showSnackbar } from '../redux/snackbar/action';\n\nexport default async function CommonNetworkCall(path, method, data = '', headers = {}) {\n  const dispatch = useDispatch();\n\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  let _axios;\n  switch (method) {\n    case 'get':\n      _axios = axios.get(url);\n      break;\n    case 'post':\n      _axios = axios.post(url, data, { headers });\n      break;\n    case 'delete':\n      _axios = axios.delete(url, { headers });\n      break;\n    case 'put':\n      _axios = axios.put(url, data, { headers });\n      break;\n    default:\n      _axios = axios();\n  }\n  await _axios\n    .then(async (apiResponse) => {\n      const { response, result } = apiResponse.data;\n\n      if (response.code !== '000000') {\n        dispatch(showSnackbar('Terjadi Gangguan', 'error'));\n        return null;\n      }\n      return result;\n    })\n    .catch(async (error) => {\n      if (isNotUndefined(error.response)) {\n        const { data } = error.response;\n        dispatch(showSnackbar(data.response.user_errors, 'error'));\n      } else {\n        dispatch(showSnackbar(error.toString(), 'error'));\n      }\n      return null;\n    });\n}\n\n"]},"metadata":{},"sourceType":"module"}