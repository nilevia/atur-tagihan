{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/pages/pulsa-dan-data/[order_id]/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Router from 'next/router'; // material\n\nimport { Divider } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { TabPanel } from '../../../components/global-component/TabPanel'; // component\\\n\nimport ButtonBack from '../../../components/global-component/ButtonBack';\nimport { isNotUndefined, phoneReplace, phoneValidation } from '../../../utils/Validator';\nimport ProductItem from '../../../components/additional-product/ProductItem'; // redux\n\nimport { showSnackbar } from '../../../redux/snackbar/action';\nimport { getHashUrl } from '../../../utils/CommonUtils';\nimport { BlockDialog } from '../../../components/global-component/BlockDialog';\nimport { AuthNetworkCall } from '../../../utils/NetworkCall';\nexport var PulseAndData = /*#__PURE__*/function (_Component) {\n  _inherits(PulseAndData, _Component);\n\n  var _super = _createSuper(PulseAndData);\n\n  function PulseAndData(props) {\n    var _this;\n\n    _classCallCheck(this, PulseAndData);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      provider_logo: '',\n      errorPhoneNumber: false,\n      tabIndex: 0,\n      productList: [],\n      lastPrefix: '0000',\n      isLoading: false,\n      dialogOpen: false,\n      phoneNumber: '',\n      isAturTagihan: false\n    };\n    return _this;\n  }\n  /**\n   * @summary if apId == 7, then set index to paket data\n   */\n\n\n  _createClass(PulseAndData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.style.background = 'white';\n\n      if (localStorage.getItem('apId') === '7') {\n        this.setState({\n          tabIndex: 1\n        });\n      } // Jika pada path ada \"beli\" maka bukan dari detail tagihan aturtagihan\n\n\n      var orderId = getHashUrl();\n      this.setState({\n        orderId: orderId\n      });\n      if (orderId !== 'beli') this.setState({\n        isAturTagihan: true\n      });else this.setState({\n        isAturTagihan: false\n      });\n    }\n    /**\n     * @method phoneNumberWatcher\n     * @summary this method will do validation for each input on phone number form\n     * */\n\n  }, {\n    key: \"phoneNumberWatcher\",\n    value: function () {\n      var _phoneNumberWatcher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var value, _this$state, phoneNumber, lastPrefix, valuePrefix;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                value = event.target.value; // change input to match format\n\n                _context.next = 3;\n                return this.setState({\n                  phoneNumber: phoneReplace(value)\n                });\n\n              case 3:\n                _this$state = this.state, phoneNumber = _this$state.phoneNumber, lastPrefix = _this$state.lastPrefix;\n\n                if (phoneNumber.length >= 4) {\n                  // get the prefix\n                  valuePrefix = value.substring(0, 4); // get new price list if prefix is different\n\n                  if (valuePrefix !== lastPrefix) {\n                    this.setState({\n                      lastPrefix: valuePrefix\n                    });\n                    this.getPriceList(valuePrefix);\n                  } // phonumber length validation\n\n\n                  this.setState({\n                    errorPhoneNumber: !phoneValidation(phoneNumber)\n                  });\n                } // reset all\n\n\n                if (phoneNumber.length < 4) {\n                  this.setState({\n                    provider_logo: '',\n                    errorPhoneNumber: false,\n                    productList: [],\n                    lastPrefix: '0000'\n                  });\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function phoneNumberWatcher(_x) {\n        return _phoneNumberWatcher.apply(this, arguments);\n      }\n\n      return phoneNumberWatcher;\n    }()\n    /**\n     * @method getPriceList\n     * @summary get pricelist and operator logo by prefix\n     * if tab index 0 means pulsa (id 5)\n     * if tab index 1 means paket data (id 7)\n     *\n     * */\n\n  }, {\n    key: \"getPriceList\",\n    value: function () {\n      var _getPriceList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(prefix) {\n        var _this2 = this;\n\n        var showSnackbar, productId, BASE_URL, url;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.setState({\n                  isLoading: true\n                });\n                showSnackbar = this.props.showSnackbar;\n                productId = this.state.tabIndex === 0 ? 5 : 7;\n                BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n                url = \"\".concat(BASE_URL, \"/product_type/\").concat(productId, \"/products/atur_tagihan?operator_prefix__starts_with=\").concat(prefix);\n                _context4.next = 7;\n                return axios.get(url).then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(apiResponse) {\n                    var _apiResponse$data, response, result;\n\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _apiResponse$data = apiResponse.data, response = _apiResponse$data.response, result = _apiResponse$data.result;\n\n                            if (response.code !== '000000') {\n                              showSnackbar('Terjadi Gangguan', 'error');\n                            } else {\n                              _this2.mappingOperatorAndPrice(result);\n                            }\n\n                            _this2.setState({\n                              isLoading: false\n                            });\n\n                          case 3:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x3) {\n                    return _ref.apply(this, arguments);\n                  };\n                }())[\"catch\"]( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(error) {\n                    var data;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            if (isNotUndefined(error.response)) {\n                              data = error.response.data;\n                              showSnackbar(data.response.user_errors, 'error');\n                            } else {\n                              showSnackbar(error.toString(), 'error');\n                            }\n\n                            _this2.setState({\n                              isLoading: false\n                            });\n\n                          case 2:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x4) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getPriceList(_x2) {\n        return _getPriceList.apply(this, arguments);\n      }\n\n      return getPriceList;\n    }()\n    /**\n     * @method mappingOperatorAndPrice\n     * @summary mapping product list to state and get provider logo price list found\n     * */\n\n  }, {\n    key: \"mappingOperatorAndPrice\",\n    value: function mappingOperatorAndPrice(productList) {\n      this.setState({\n        productList: productList\n      });\n\n      if (productList.length > 0) {\n        this.setState({\n          provider_logo: productList[0].operator_icon\n        });\n      } else {\n        this.props.showSnackbar('Daftar harga tidak ditemukan', 'error');\n      }\n    }\n    /**\n     * @summary this method is to set tab index and local storage based on tab index value\n     * then hit end point by last prefix\n     * use async and await so this will be not async\n     * */\n\n  }, {\n    key: \"onTabChange\",\n    value: function () {\n      var _onTabChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(newValue) {\n        var lastPrefix;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                lastPrefix = this.state.lastPrefix;\n                _context5.next = 3;\n                return this.setState({\n                  tabIndex: newValue\n                });\n\n              case 3:\n                localStorage.setItem('apId', newValue === 0 ? '5' : '7');\n                if (lastPrefix !== '0000') this.getPriceList(lastPrefix);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function onTabChange(_x5) {\n        return _onTabChange.apply(this, arguments);\n      }\n\n      return onTabChange;\n    }()\n    /**\n     * @method addToCart\n     * @summary add selected item to cart by post using order_idenifier, customer_id, and price_id\n     * @param price_id\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"addToCart\",\n    value: function () {\n      var _addToCart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(price_id) {\n        var headers, data, result;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!this.state.errorPhoneNumber) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                showSnackbar('Masukkan nomor telepon dengan benar', 'error');\n                _context6.next = 12;\n                break;\n\n              case 4:\n                this.setState({\n                  dialogOpen: true\n                });\n                headers = {\n                  'Content-Type': 'application/json'\n                };\n                data = JSON.stringify({\n                  price_id: price_id,\n                  order_identifier: this.state.phoneNumber\n                });\n                _context6.next = 9;\n                return AuthNetworkCall('/cart/atur_tagihan', 'post', this.props.showSnackbar, data, headers);\n\n              case 9:\n                result = _context6.sent;\n\n                if (result) {\n                  // untuk atur tagihan\n                  if (this.state.isAturTagihan) Router.push(\"/detail-tagihan/\".concat(this.state.orderId)); // beli biasa\n                  else Router.push('/detail-tagihan/beli');\n                }\n\n                this.setState({\n                  dialogOpen: false\n                });\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function addToCart(_x6) {\n        return _addToCart.apply(this, arguments);\n      }\n\n      return addToCart;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          tabIndex = _this$state2.tabIndex,\n          productList = _this$state2.productList,\n          isLoading = _this$state2.isLoading,\n          dialogOpen = _this$state2.dialogOpen,\n          errorPhoneNumber = _this$state2.errorPhoneNumber,\n          phoneNumber = _this$state2.phoneNumber;\n      var productItem = productList.length > 0 ? __jsx(\"div\", {\n        className: \"additional-product-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }\n      }, productList.map(function (item) {\n        return __jsx(ProductItem, {\n          key: item.id,\n          title: item.product_name,\n          desc: item.product_desc,\n          price: item.sell_price,\n          onClick: function onClick() {\n            return _this3.addToCart(item.price_id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }\n        });\n      })) : null;\n      var displayItem = isLoading ? __jsx(CircularProgress, {\n        style: {\n          position: 'absolute',\n          left: '47%',\n          top: '60%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 7\n        }\n      }) : productItem;\n      return __jsx(\"div\", {\n        className: \"main-content\",\n        id: \"mainContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 7\n        }\n      }, __jsx(ButtonBack, {\n        id: \"btnBack\",\n        onClick: function onClick() {\n          return Router.back();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }), __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        className: \"margin-top-24 margin-btm-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        className: \"font-muli-18 bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      }, \"Pulsa & Paket Data\"), __jsx(TextField, {\n        id: \"phoneNumberField\",\n        placeholder: \"contoh: 081234567891\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputProps: {\n          endAdornment: __jsx(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }\n          }, __jsx(\"img\", {\n            src: this.state.provider_logo,\n            style: {\n              maxHeight: '18px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }\n          }))\n        },\n        inputProps: {\n          maxLength: 13,\n          pattern: '[0-9]'\n        },\n        label: \"Masukkan no handphone\",\n        variant: \"filled\",\n        color: \"primary\",\n        onChange: function onChange(event) {\n          return _this3.phoneNumberWatcher(event);\n        },\n        error: errorPhoneNumber,\n        helperText: errorPhoneNumber ? 'Nomor telepon 11 sampai 13 digit' : '',\n        value: phoneNumber // type=\"number\"\n        // onPaste={(event) => this.getPriceList(event.clipboardData.getData('Text'))}\n        // onKeyDown={(event) => event.key === 'Enter'? console.log(\"asu\") : console.log(\"juju asu\")}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }\n      })), __jsx(Tabs, {\n        value: tabIndex,\n        indicatorColor: \"primary\",\n        onChange: function onChange(event, newValue) {\n          return _this3.onTabChange(newValue);\n        },\n        centered: true,\n        variant: \"fullWidth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }, __jsx(Tab, {\n        label: __jsx(\"span\", {\n          className: \"font-muli-14 bold\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 23\n          }\n        }, \"Pulsa\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      }), __jsx(Tab, {\n        label: __jsx(\"span\", {\n          className: \"font-muli-14 bold\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 23\n          }\n        }, \"Paket Data\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      })), __jsx(TabPanel, {\n        value: tabIndex,\n        index: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, displayItem), __jsx(TabPanel, {\n        value: tabIndex,\n        index: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }, displayItem), __jsx(BlockDialog, {\n        isOpen: dialogOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return PulseAndData;\n}(Component);\nvar mapDispatchToProps = {\n  showSnackbar: showSnackbar\n};\nexport default connect(null, mapDispatchToProps)(PulseAndData);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/pages/pulsa-dan-data/[order_id]/index.js"],"names":["React","Component","Router","Divider","TextField","InputAdornment","Tabs","Tab","axios","connect","CircularProgress","TabPanel","ButtonBack","isNotUndefined","phoneReplace","phoneValidation","ProductItem","showSnackbar","getHashUrl","BlockDialog","AuthNetworkCall","PulseAndData","props","state","provider_logo","errorPhoneNumber","tabIndex","productList","lastPrefix","isLoading","dialogOpen","phoneNumber","isAturTagihan","document","body","style","background","localStorage","getItem","setState","orderId","event","value","target","length","valuePrefix","substring","getPriceList","prefix","productId","BASE_URL","process","env","NEXT_PUBLIC_API_BASE_URL","url","get","then","apiResponse","data","response","result","code","mappingOperatorAndPrice","error","user_errors","toString","operator_icon","newValue","setItem","price_id","headers","JSON","stringify","order_identifier","push","productItem","map","item","id","product_name","product_desc","sell_price","addToCart","displayItem","position","left","top","back","endAdornment","maxHeight","maxLength","pattern","phoneNumberWatcher","onTabChange","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\n\n// material\nimport { Divider } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { TabPanel } from '../../../components/global-component/TabPanel';\n\n// component\\\nimport ButtonBack from '../../../components/global-component/ButtonBack';\nimport { isNotUndefined, phoneReplace, phoneValidation } from '../../../utils/Validator';\nimport ProductItem from '../../../components/additional-product/ProductItem';\n// redux\nimport { showSnackbar } from '../../../redux/snackbar/action';\nimport { getHashUrl } from '../../../utils/CommonUtils';\nimport { BlockDialog } from '../../../components/global-component/BlockDialog';\nimport { AuthNetworkCall } from '../../../utils/NetworkCall';\n\nexport class PulseAndData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      provider_logo: '',\n      errorPhoneNumber: false,\n      tabIndex: 0,\n      productList: [],\n      lastPrefix: '0000',\n      isLoading: false,\n      dialogOpen: false,\n      phoneNumber: '',\n      isAturTagihan: false,\n    };\n  }\n\n  /**\n   * @summary if apId == 7, then set index to paket data\n   */\n  componentDidMount() {\n    document.body.style.background = 'white';\n    if (localStorage.getItem('apId') === '7') {\n      this.setState({ tabIndex: 1 });\n    }\n\n    // Jika pada path ada \"beli\" maka bukan dari detail tagihan aturtagihan\n    const orderId = getHashUrl();\n    this.setState({ orderId });\n    if (orderId !== 'beli') this.setState({ isAturTagihan: true });\n    else this.setState({ isAturTagihan: false });\n  }\n\n  /**\n   * @method phoneNumberWatcher\n   * @summary this method will do validation for each input on phone number form\n   * */\n  async phoneNumberWatcher(event) {\n    const { value } = event.target;\n\n    // change input to match format\n    await this.setState({ phoneNumber: phoneReplace(value) });\n    const { phoneNumber, lastPrefix } = this.state;\n\n    if (phoneNumber.length >= 4) {\n      // get the prefix\n      const valuePrefix = value.substring(0, 4);\n\n      // get new price list if prefix is different\n      if (valuePrefix !== lastPrefix) {\n        this.setState({ lastPrefix: valuePrefix });\n        this.getPriceList(valuePrefix);\n      }\n\n      // phonumber length validation\n      this.setState({ errorPhoneNumber: !phoneValidation(phoneNumber) });\n    }\n\n    // reset all\n    if (phoneNumber.length < 4) {\n      this.setState({\n        provider_logo: '', errorPhoneNumber: false, productList: [], lastPrefix: '0000',\n      });\n    }\n  }\n\n  /**\n   * @method getPriceList\n   * @summary get pricelist and operator logo by prefix\n   * if tab index 0 means pulsa (id 5)\n   * if tab index 1 means paket data (id 7)\n   *\n   * */\n  async getPriceList(prefix) {\n    this.setState({ isLoading: true });\n    const { showSnackbar } = this.props;\n    const productId = this.state.tabIndex === 0 ? 5 : 7;\n    const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n    const url = `${BASE_URL}/product_type/${productId}/products/atur_tagihan?operator_prefix__starts_with=${prefix}`;\n\n    await axios\n      .get(url)\n      .then(async (apiResponse) => {\n        const { response, result } = apiResponse.data;\n\n        if (response.code !== '000000') {\n          showSnackbar('Terjadi Gangguan', 'error');\n        } else {\n          this.mappingOperatorAndPrice(result);\n        }\n        this.setState({ isLoading: false });\n      })\n      .catch(async (error) => {\n        if (isNotUndefined(error.response)) {\n          const { data } = error.response;\n          showSnackbar(data.response.user_errors, 'error');\n        } else {\n          showSnackbar(error.toString(), 'error');\n        }\n        this.setState({ isLoading: false });\n      });\n  }\n\n  /**\n   * @method mappingOperatorAndPrice\n   * @summary mapping product list to state and get provider logo price list found\n   * */\n  mappingOperatorAndPrice(productList) {\n    this.setState({ productList });\n    if (productList.length > 0) {\n      this.setState({ provider_logo: productList[0].operator_icon });\n    } else {\n      this.props.showSnackbar('Daftar harga tidak ditemukan', 'error');\n    }\n  }\n\n  /**\n   * @summary this method is to set tab index and local storage based on tab index value\n   * then hit end point by last prefix\n   * use async and await so this will be not async\n   * */\n  async onTabChange(newValue) {\n    const { lastPrefix } = this.state;\n    await this.setState({ tabIndex: newValue });\n    localStorage.setItem('apId', newValue === 0 ? '5' : '7');\n    if (lastPrefix !== '0000') this.getPriceList(lastPrefix);\n  }\n\n  /**\n   * @method addToCart\n   * @summary add selected item to cart by post using order_idenifier, customer_id, and price_id\n   * @param price_id\n   * @returns {Promise<void>}\n   */\n  async addToCart(price_id) {\n    if (this.state.errorPhoneNumber) {\n      showSnackbar('Masukkan nomor telepon dengan benar', 'error');\n    } else {\n      this.setState({ dialogOpen: true });\n\n      const headers = { 'Content-Type': 'application/json' };\n      const data = JSON.stringify({\n        price_id,\n        order_identifier: this.state.phoneNumber,\n      });\n\n      const result = await AuthNetworkCall('/cart/atur_tagihan', 'post', this.props.showSnackbar, data, headers);\n      if (result) {\n        // untuk atur tagihan\n        if (this.state.isAturTagihan) Router.push(`/detail-tagihan/${this.state.orderId}`);\n        // beli biasa\n        else Router.push('/detail-tagihan/beli');\n      }\n      this.setState({ dialogOpen: false });\n    }\n  }\n\n  render() {\n    const {\n      tabIndex, productList, isLoading, dialogOpen, errorPhoneNumber, phoneNumber,\n    } = this.state;\n    const productItem = productList.length > 0 ? (\n      <div className=\"additional-product-content\">\n        {productList.map((item) => (\n          <ProductItem\n            key={item.id}\n            title={item.product_name}\n            desc={item.product_desc}\n            price={item.sell_price}\n            onClick={() => this.addToCart(item.price_id)}\n          />\n        ))}\n      </div>\n    ) : null;\n    const displayItem = isLoading ? (\n      <CircularProgress style={{ position: 'absolute', left: '47%', top: '60%' }} />\n    ) : (\n      productItem\n    );\n    return (\n      <div className=\"main-content\" id=\"mainContent\">\n        <ButtonBack id=\"btnBack\" onClick={() => Router.back()} />\n        <Divider />\n        <div className=\"margin-top-24 margin-btm-8\">\n          <p className=\"font-muli-18 bold\">Pulsa & Paket Data</p>\n          <TextField\n            id=\"phoneNumberField\"\n            placeholder=\"contoh: 081234567891\"\n            fullWidth\n            margin=\"normal\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <img src={this.state.provider_logo} style={{ maxHeight: '18px' }} />\n                </InputAdornment>\n              ),\n            }}\n            inputProps={{ maxLength: 13, pattern: '[0-9]' }}\n            label=\"Masukkan no handphone\"\n            variant=\"filled\"\n            color=\"primary\"\n            onChange={(event) => this.phoneNumberWatcher(event)}\n            error={errorPhoneNumber}\n            helperText={errorPhoneNumber ? 'Nomor telepon 11 sampai 13 digit' : ''}\n            value={phoneNumber}\n            // type=\"number\"\n            // onPaste={(event) => this.getPriceList(event.clipboardData.getData('Text'))}\n            // onKeyDown={(event) => event.key === 'Enter'? console.log(\"asu\") : console.log(\"juju asu\")}\n\n          />\n        </div>\n\n        <Tabs\n          value={tabIndex}\n          indicatorColor=\"primary\"\n          onChange={(event, newValue) => this.onTabChange(newValue)}\n          centered\n          variant=\"fullWidth\"\n        >\n          <Tab label={<span className=\"font-muli-14 bold\">Pulsa</span>} />\n          <Tab label={<span className=\"font-muli-14 bold\">Paket Data</span>} />\n        </Tabs>\n        <TabPanel value={tabIndex} index={0}>\n          {displayItem}\n        </TabPanel>\n        <TabPanel value={tabIndex} index={1}>\n          {displayItem}\n        </TabPanel>\n\n        <BlockDialog isOpen={dialogOpen} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n};\nexport default connect(null, mapDispatchToProps)(PulseAndData);\n"]},"metadata":{},"sourceType":"module"}