{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { isNotUndefined } from './Validator'; // notes\n// ada masalah dengan react hooks sehingga showSnackbar dijadikan\n// parameter dan disupply dari component\n// unit test selanjutnya tidak perlu mengetes skenario error, hanya sukses\n\n/**\n * @summary memanggil api tanpa auth\n * @param path (url setelah api/v1\n * @param method\n * @param showSnackbar gunakan this.props.showSnackbar jika ingin default atau gunakan () => {} jika ingin custom dari page\n * @param dataRequest (bisa dikosongi)\n * @param headers (bisa dikosongi)\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nexport async function CommonNetworkCall(path, method, showSnackbar, dataRequest = '', headers = {}) {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`; // eslint-disable-next-line no-use-before-define,no-return-await\n\n  return await axiosService(method, url, dataRequest, headers).then(apiResponse => {\n    const {\n      response,\n      result\n    } = apiResponse.data;\n\n    if (response.code !== '000000') {\n      showSnackbar('Terjadi Gangguan', 'error');\n      return null;\n    }\n\n    return result;\n  }).catch(error => {\n    if (isNotUndefined(error.response)) {\n      const {\n        data\n      } = error.response;\n      showSnackbar(data.response.user_errors, 'error');\n    } else {\n      showSnackbar(error.toString(), 'error');\n    }\n\n    return null;\n  });\n}\n/**\n * @summary call api using auth that placed at header, if get 401 we should call refresh token\n * but now then refresh token end point not ready yet, so we directly go to login page and clear storage\n * @param path\n * @param method\n * @param showSnackbar, gunakan this.props.showSnackbar jika ingin default atau gunakan () => {} jika ingin custom dari page\n * @param dataRequest\n * @param customHeader\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nexport async function AuthNetworkCall(path, method, showSnackbar, dataRequest = '', customHeader = {}) {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n  const token = JSON.parse(localStorage.getItem('token'));\n  let headers;\n\n  if (token) {\n    headers = _objectSpread(_objectSpread({}, customHeader), {}, {\n      Authorization: `Bearer ${token.access_token}`\n    });\n  } else {\n    doLogout();\n    return null;\n  } // };\n  // eslint-disable-next-line no-use-before-define,no-return-await\n\n\n  return await axiosService(method, url, dataRequest, headers).then(apiResponse => {\n    const {\n      response,\n      result\n    } = apiResponse.data;\n\n    if (response.code !== '000000') {\n      showSnackbar('Terjadi Gangguan', 'error');\n      return null;\n    }\n\n    return result;\n  }).catch(error => {\n    if (isNotUndefined(error.response)) {\n      const {\n        data\n      } = error.response;\n\n      if (error.response.status === 401) {\n        showSnackbar('Terjadi masalah, silahkan login terlebih dahulu', 'error');\n        doLogout();\n      } else if (error.response.status === 403) {\n        showSnackbar('Akun anda tidak aktif atau terblokir, silahkan gunakan akun lain', 'error');\n        doLogout();\n      } else showSnackbar(data.response.user_errors, 'error');\n    } else {\n      showSnackbar(error.toString(), 'error');\n    }\n\n    return null;\n  });\n}\n\nfunction doLogout() {\n  localStorage.clear();\n  Router.push('/login');\n}\n\nfunction axiosService(method, url, dataRequest = '', headers = {}) {\n  switch (method) {\n    case 'get':\n      return axios.get(url, {\n        headers\n      });\n\n    case 'post':\n      const header = _objectSpread(_objectSpread({}, headers), {}, {\n        'Content-Type': 'application/json'\n      });\n\n      return axios.post(url, dataRequest, {\n        header\n      });\n\n    case 'delete':\n      return axios.delete(url, {\n        headers\n      });\n\n    case 'put':\n      return axios.put(url, dataRequest, {\n        headers\n      });\n\n    default:\n      return axios();\n  }\n}\n/**\n * @summary get user status\n *  empty = if no user logged\n *  logged = if user logged and token active\n *  expired = if token expired\n *  inactive = if user blocked\n *  error = if network error\n * @returns {Promise<string>}\n */\n\n\nexport async function isUserLoggedValid() {\n  const URL = `${process.env.NEXT_PUBLIC_API_BASE_URL}/customer/profile`;\n  let headers;\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  if (token) {\n    headers = {\n      Authorization: `Bearer ${token.access_token}`\n    };\n  } else {\n    return 'empty';\n  } // eslint-disable-next-line no-return-await\n\n\n  return await axios.get(URL, {\n    headers\n  }).then(() => 'logged').catch(error => {\n    if (isNotUndefined(error.response)) {\n      if (error.response.status === 401) {\n        return 'expired';\n      }\n\n      if (error.response.status === 403) {\n        return 'inactive';\n      }\n\n      return 'error';\n    }\n\n    return 'error';\n  });\n}","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/utils/NetworkCall.js"],"names":["React","axios","Router","isNotUndefined","CommonNetworkCall","path","method","showSnackbar","dataRequest","headers","BASE_URL","process","env","NEXT_PUBLIC_API_BASE_URL","url","axiosService","then","apiResponse","response","result","data","code","catch","error","user_errors","toString","AuthNetworkCall","customHeader","token","JSON","parse","localStorage","getItem","Authorization","access_token","doLogout","status","clear","push","get","header","post","delete","put","isUserLoggedValid","URL"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { isNotUndefined } from './Validator';\n\n// notes\n// ada masalah dengan react hooks sehingga showSnackbar dijadikan\n// parameter dan disupply dari component\n// unit test selanjutnya tidak perlu mengetes skenario error, hanya sukses\n\n/**\n * @summary memanggil api tanpa auth\n * @param path (url setelah api/v1\n * @param method\n * @param showSnackbar gunakan this.props.showSnackbar jika ingin default atau gunakan () => {} jika ingin custom dari page\n * @param dataRequest (bisa dikosongi)\n * @param headers (bisa dikosongi)\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nexport async function CommonNetworkCall(path, method, showSnackbar, dataRequest = '', headers = {}) {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  // eslint-disable-next-line no-use-before-define,no-return-await\n  return await axiosService(method, url, dataRequest, headers)\n    .then((apiResponse) => {\n      const { response, result } = apiResponse.data;\n\n      if (response.code !== '000000') {\n        showSnackbar('Terjadi Gangguan', 'error');\n        return null;\n      }\n      return result;\n    })\n    .catch((error) => {\n      if (isNotUndefined(error.response)) {\n        const { data } = error.response;\n        showSnackbar(data.response.user_errors, 'error');\n      } else {\n        showSnackbar(error.toString(), 'error');\n      }\n      return null;\n    });\n}\n\n/**\n * @summary call api using auth that placed at header, if get 401 we should call refresh token\n * but now then refresh token end point not ready yet, so we directly go to login page and clear storage\n * @param path\n * @param method\n * @param showSnackbar, gunakan this.props.showSnackbar jika ingin default atau gunakan () => {} jika ingin custom dari page\n * @param dataRequest\n * @param customHeader\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\nexport async function AuthNetworkCall(path, method, showSnackbar, dataRequest = '', customHeader = {}) {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  const token = JSON.parse(localStorage.getItem('token'));\n  let headers;\n  if (token) {\n    headers = { ...customHeader, Authorization: `Bearer ${token.access_token}` };\n  } else {\n    doLogout();\n    return null;\n  }\n  // };\n\n  // eslint-disable-next-line no-use-before-define,no-return-await\n  return await axiosService(method, url, dataRequest, headers)\n    .then((apiResponse) => {\n      const { response, result } = apiResponse.data;\n\n      if (response.code !== '000000') {\n        showSnackbar('Terjadi Gangguan', 'error');\n        return null;\n      }\n      return result;\n    })\n    .catch((error) => {\n      if (isNotUndefined(error.response)) {\n        const { data } = error.response;\n        if (error.response.status === 401) {\n          showSnackbar('Terjadi masalah, silahkan login terlebih dahulu', 'error');\n          doLogout();\n        } else if (error.response.status === 403) {\n          showSnackbar('Akun anda tidak aktif atau terblokir, silahkan gunakan akun lain', 'error');\n          doLogout();\n        } else showSnackbar(data.response.user_errors, 'error');\n      } else {\n        showSnackbar(error.toString(), 'error');\n      }\n      return null;\n    });\n}\n\nfunction doLogout() {\n  localStorage.clear();\n  Router.push('/login');\n}\n\nfunction axiosService(method, url, dataRequest = '', headers = {}) {\n  switch (method) {\n    case 'get':\n      return axios.get(url, { headers });\n    case 'post':\n      const header = { ...headers, 'Content-Type': 'application/json' };\n      return axios.post(url, dataRequest, { header });\n    case 'delete':\n      return axios.delete(url, { headers });\n    case 'put':\n      return axios.put(url, dataRequest, { headers });\n    default:\n      return axios();\n  }\n}\n\n/**\n * @summary get user status\n *  empty = if no user logged\n *  logged = if user logged and token active\n *  expired = if token expired\n *  inactive = if user blocked\n *  error = if network error\n * @returns {Promise<string>}\n */\nexport async function isUserLoggedValid() {\n  const URL = `${process.env.NEXT_PUBLIC_API_BASE_URL}/customer/profile`;\n  let headers;\n  const token = JSON.parse(localStorage.getItem('token'));\n  if (token) {\n    headers = { Authorization: `Bearer ${token.access_token}` };\n  } else {\n    return 'empty';\n  }\n  // eslint-disable-next-line no-return-await\n  return await axios\n    .get(URL, { headers })\n    .then(() => 'logged')\n    .catch((error) => {\n      if (isNotUndefined(error.response)) {\n        if (error.response.status === 401) {\n          return 'expired';\n        }\n        if (error.response.status === 403) {\n          return 'inactive';\n        }\n        return 'error';\n      }\n      return 'error';\n    });\n}\n"]},"metadata":{},"sourceType":"module"}