{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/pages/login/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport GoogleLogin from 'react-google-login'; // material\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider'; // component\n\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ButtonBack from '../../components/global-component/ButtonBack'; // redux\n\nimport { showSnackbar } from '../../redux/snackbar/action';\nimport { isNotUndefined } from '../../utils/Validator';\nimport { BlockDialog } from '../../components/global-component/BlockDialog';\nexport var Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.style.background = 'white';\n    }\n    /**\n     *  @summary this method mapping google response and get token then post it to backend, if success\n     *  the response google data will be saved on local\n     *  BE do validating to token given\n     * */\n\n  }, {\n    key: \"onSuccessLogin\",\n    value: function () {\n      var _onSuccessLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(responseGoogle) {\n        var _this2 = this;\n\n        var data, headers, showSnackbar, BASE_URL, url;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.setState({\n                  isLoading: true\n                });\n                data = JSON.stringify({\n                  access_token: responseGoogle.accessToken,\n                  token_id: responseGoogle.tokenId\n                });\n                headers = {\n                  'Content-Type': 'application/json'\n                };\n                showSnackbar = this.props.showSnackbar;\n                BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n                url = \"\".concat(BASE_URL, \"/customer/auth/social_login/google\");\n                _context2.next = 8;\n                return axios.post(url, data, {\n                  headers: headers\n                }).then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(apiResponse) {\n                    var _apiResponse$data, response, result;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _apiResponse$data = apiResponse.data, response = _apiResponse$data.response, result = _apiResponse$data.result;\n\n                            if (response.code !== '000000') {\n                              showSnackbar('Terjadi Gangguan', 'error');\n\n                              _this2.setState({\n                                isLoading: false\n                              });\n                            } else {\n                              localStorage.setItem('token', JSON.stringify(result));\n                              localStorage.setItem('profile', JSON.stringify(responseGoogle.profileObj));\n                              Router.back();\n                            }\n\n                          case 2:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }())[\"catch\"](function (error) {\n                  if (isNotUndefined(error.response)) {\n                    var _data = error.response.data;\n                    showSnackbar(_data.response.user_errors, 'error');\n                  } else {\n                    showSnackbar(error.toString(), 'error');\n                  }\n\n                  _this2.setState({\n                    isLoading: false\n                  });\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onSuccessLogin(_x) {\n        return _onSuccessLogin.apply(this, arguments);\n      }\n\n      return onSuccessLogin;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        className: \"main-content\",\n        id: \"mainContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, __jsx(ButtonBack, {\n        id: \"btnBack\",\n        onClick: function onClick() {\n          return Router.back();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }), __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        className: \"txt-center-hoz font-muli-16\",\n        style: {\n          marginTop: '130px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"Hi...\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, \"Selamat datang di BayarTagihan\")), __jsx(\"div\", {\n        className: \"txt-center-hoz pointer margin-top-36 margin-btm-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, __jsx(GoogleLogin, {\n        clientId: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID,\n        render: function render(renderProps) {\n          return __jsx(Button, {\n            variant: \"outlined\",\n            startIcon: __jsx(\"img\", {\n              width: 16,\n              src: \"/icon/ic_google.png\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 28\n              }\n            }),\n            size: \"large\",\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            style: {\n              textTransform: 'none'\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }\n          }, __jsx(\"span\", {\n            className: \"font-muli-14 bold\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }\n          }, \"Masuk atau daftar dengan Google\"));\n        },\n        onSuccess: function onSuccess(responseGoogle) {\n          return _this3.onSuccessLogin(responseGoogle);\n        } // onFailure={responseGoogle}\n        ,\n        cookiePolicy: \"single_host_origin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }), __jsx(BlockDialog, {\n        isOpen: this.state.isLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\nvar mapDispatchToProps = {\n  showSnackbar: showSnackbar\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/pages/login/index.js"],"names":["React","Component","Router","GoogleLogin","Button","Divider","connect","axios","ButtonBack","showSnackbar","isNotUndefined","BlockDialog","Login","props","state","isLoading","document","body","style","background","responseGoogle","setState","data","JSON","stringify","access_token","accessToken","token_id","tokenId","headers","BASE_URL","process","env","NEXT_PUBLIC_API_BASE_URL","url","post","then","apiResponse","response","result","code","localStorage","setItem","profileObj","back","error","user_errors","toString","marginTop","NEXT_PUBLIC_GOOGLE_CLIENT_ID","renderProps","onClick","disabled","textTransform","onSuccessLogin","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport GoogleLogin from 'react-google-login';\n\n// material\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n// component\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ButtonBack from '../../components/global-component/ButtonBack';\n\n// redux\n\nimport { showSnackbar } from '../../redux/snackbar/action';\nimport { isNotUndefined } from '../../utils/Validator';\nimport { BlockDialog } from '../../components/global-component/BlockDialog';\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.background = 'white';\n  }\n\n  /**\n   *  @summary this method mapping google response and get token then post it to backend, if success\n   *  the response google data will be saved on local\n   *  BE do validating to token given\n   * */\n\n  async onSuccessLogin(responseGoogle) {\n    this.setState({ isLoading: true });\n    const data = JSON.stringify({\n      access_token: responseGoogle.accessToken,\n      token_id: responseGoogle.tokenId,\n    });\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    const { showSnackbar } = this.props;\n\n    const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n    const url = `${BASE_URL}/customer/auth/social_login/google`;\n\n    await axios\n      .post(url, data, { headers })\n      .then(async (apiResponse) => {\n        const { response, result } = apiResponse.data;\n        if (response.code !== '000000') {\n          showSnackbar('Terjadi Gangguan', 'error');\n          this.setState({ isLoading: false });\n        } else {\n          localStorage.setItem('token', JSON.stringify(result));\n          localStorage.setItem('profile', JSON.stringify(responseGoogle.profileObj));\n          Router.back();\n        }\n      }).catch((error) => {\n        if (isNotUndefined(error.response)) {\n          const { data } = error.response;\n          showSnackbar(data.response.user_errors, 'error');\n        } else {\n          showSnackbar(error.toString(), 'error');\n        }\n        this.setState({ isLoading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"main-content\" id=\"mainContent\">\n        <ButtonBack id=\"btnBack\" onClick={() => Router.back()} />\n        <Divider />\n        {/* Sementara */}\n        <div\n          className=\"txt-center-hoz font-muli-16\"\n          style={{ marginTop: '130px' }}\n        >\n          <p>Hi...</p>\n          <p>Selamat datang di BayarTagihan</p>\n        </div>\n        <div className=\"txt-center-hoz pointer margin-top-36 margin-btm-24\">\n\n          <GoogleLogin\n            clientId={process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID}\n            render={(renderProps) => (\n              <Button\n                variant=\"outlined\"\n                startIcon={<img width={16} src=\"/icon/ic_google.png\" />}\n                size=\"large\"\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                style={{ textTransform: 'none' }}\n              >\n                <span className=\"font-muli-14 bold\">Masuk atau daftar dengan Google</span>\n              </Button>\n            )}\n            onSuccess={(responseGoogle) => this.onSuccessLogin(responseGoogle)}\n              // onFailure={responseGoogle}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <BlockDialog isOpen={this.state.isLoading}/>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n};\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}