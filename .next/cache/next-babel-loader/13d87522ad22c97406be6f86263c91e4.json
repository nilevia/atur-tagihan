{"ast":null,"code":"var _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/components/ConfirmationDialogPaymentMethod.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router'; // Material\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // Redux\n\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { showDialog, clearDialog } from '../redux/paymentMethod/action';\nimport { showSnackbar } from '../redux/snackbar/action'; // Component\n\nimport ButtonMain from './global-component/ButtonMain';\nimport { isNotUndefined } from '../utils/Validator';\nimport { getPaymentMethod } from '../redux/selector';\nexport class ConfirmationDialogPaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  handleClose() {\n    this.props.clearDialog();\n  }\n\n  async createOrder(customerId, itemCartId, paymentMethodId, orderId) {\n    this.setState({\n      isLoading: true\n    });\n    const {\n      showSnackbar\n    } = this.props;\n    const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n    const url = `${BASE_URL}/order/atur_tagihan`;\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const data = JSON.stringify({\n      customer_id: parseInt(customerId, 10),\n      cart_id: itemCartId,\n      payment_method_id: paymentMethodId\n    });\n    await axios.post(url, data, {\n      headers\n    }).then(async apiResponse => {\n      const {\n        response\n      } = apiResponse.data;\n\n      if (response.code !== '000000') {\n        showSnackbar('Terjadi Gangguan', 'error');\n      } else {\n        Router.push(`/status-pembayaran/${orderId}`);\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => {\n      if (isNotUndefined(error.response)) {\n        const {\n          data\n        } = error.response;\n        showSnackbar(data.response.user_errors, 'error');\n      } else {\n        showSnackbar(error.toString(), 'error');\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    });\n    this.handleClose();\n  }\n\n  render() {\n    const {\n      dialogOpen,\n      groupPayment,\n      paymentLogo,\n      paymentId,\n      customerId,\n      itemCartId,\n      orderId\n    } = this.props.PaymentMethod;\n    const {\n      isLoading\n    } = this.state;\n    return __jsx(Dialog, {\n      disableBackdropClick: true,\n      open: dialogOpen,\n      fullWidth: true,\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, __jsx(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      className: \"font-muli-18 bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Konfirmasi\"), __jsx(\"p\", {\n      className: \"font-muli-14 margin-btm-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Apakah anda yakin ingin menggunakan :\"), __jsx(\"p\", {\n      className: \"font-muli-14 margin-btm-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, groupPayment), __jsx(\"img\", {\n      src: paymentLogo,\n      className: \"payment-method-diaglog-image margin-btm-32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), isLoading ? __jsx(CircularProgress, {\n      style: {\n        position: 'sticky',\n        left: '47%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }) : __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, __jsx(ButtonMain, {\n      id: \"btnClose\",\n      onClick: () => this.handleClose(),\n      color: \"secondary\",\n      width: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Kembali\")), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, __jsx(ButtonMain, {\n      id: \"btnNext\",\n      onClick: () => this.createOrder(customerId, itemCartId, paymentId, orderId),\n      color: \"primary\",\n      width: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Lanjutkan\")))));\n  }\n\n}\nConfirmationDialogPaymentMethod.propTypes = {\n  clearDialog: PropTypes.func.isRequired,\n  PaymentMethod: PropTypes.shape({\n    dialogOpen: PropTypes.bool,\n    groupPayment: PropTypes.string,\n    paymentLogo: PropTypes.string,\n    paymentId: PropTypes.number,\n    itemCartId: PropTypes.string,\n    customerId: PropTypes.number\n  }).isRequired\n}; // dirubah menggunakan selector untuk unit test lebih baik\n\nconst mapStateToProps = state => ({\n  PaymentMethod: state.PaymentMethod\n});\n\nconst mapDispatchToProps = {\n  showDialog,\n  clearDialog,\n  showSnackbar\n};\nexport default connect(null, mapDispatchToProps)(ConfirmationDialogPaymentMethod);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/components/ConfirmationDialogPaymentMethod.js"],"names":["React","Component","PropTypes","Router","Dialog","DialogContent","CircularProgress","connect","Grid","axios","showDialog","clearDialog","showSnackbar","ButtonMain","isNotUndefined","getPaymentMethod","ConfirmationDialogPaymentMethod","constructor","props","state","isLoading","handleClose","createOrder","customerId","itemCartId","paymentMethodId","orderId","setState","BASE_URL","process","env","NEXT_PUBLIC_API_BASE_URL","url","headers","data","JSON","stringify","customer_id","parseInt","cart_id","payment_method_id","post","then","apiResponse","response","code","push","catch","error","user_errors","toString","render","dialogOpen","groupPayment","paymentLogo","paymentId","PaymentMethod","position","left","propTypes","func","isRequired","shape","bool","string","number","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\n\n// Material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\n\nimport axios from 'axios';\nimport { showDialog, clearDialog } from '../redux/paymentMethod/action';\nimport { showSnackbar } from '../redux/snackbar/action';\n\n// Component\nimport ButtonMain from './global-component/ButtonMain';\nimport { isNotUndefined } from '../utils/Validator';\nimport { getPaymentMethod } from '../redux/selector';\n\nexport class ConfirmationDialogPaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  handleClose() {\n    this.props.clearDialog();\n  }\n\n  async createOrder(customerId, itemCartId, paymentMethodId, orderId) {\n    this.setState({ isLoading: true });\n    const { showSnackbar } = this.props;\n\n    const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n    const url = `${BASE_URL}/order/atur_tagihan`;\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const data = JSON.stringify({\n      customer_id: parseInt(customerId, 10),\n      cart_id: itemCartId,\n      payment_method_id: paymentMethodId,\n    });\n    await axios\n      .post(url, data, { headers })\n      .then(async (apiResponse) => {\n        const { response } = apiResponse.data;\n        if (response.code !== '000000') {\n          showSnackbar('Terjadi Gangguan', 'error');\n        } else {\n          Router.push(`/status-pembayaran/${orderId}`);\n        }\n        this.setState({ isLoading: false });\n      }).catch((error) => {\n        if (isNotUndefined(error.response)) {\n          const { data } = error.response;\n          showSnackbar(data.response.user_errors, 'error');\n        } else {\n          showSnackbar(error.toString(), 'error');\n        }\n        this.setState({ isLoading: false });\n      });\n    this.handleClose();\n  }\n\n  render() {\n    const {\n      dialogOpen, groupPayment, paymentLogo, paymentId, customerId, itemCartId, orderId,\n    } = this.props.PaymentMethod;\n    const { isLoading } = this.state;\n    return (\n      <Dialog\n        disableBackdropClick\n        open={dialogOpen}\n        fullWidth\n        maxWidth=\"xs\"\n      >\n        <DialogContent>\n          <p className=\"font-muli-18 bold\">Konfirmasi</p>\n          <p className=\"font-muli-14 margin-btm-16\">Apakah anda yakin ingin menggunakan :</p>\n          <p className=\"font-muli-14 margin-btm-16\">{groupPayment}</p>\n          <img src={paymentLogo} className=\"payment-method-diaglog-image margin-btm-32\" />\n\n          {isLoading ? (\n            <CircularProgress style={{ position: 'sticky', left: '47%' }} />\n          ) : (\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              spacing={2}\n            >\n              <Grid item xs={6}>\n                <ButtonMain id=\"btnClose\" onClick={() => this.handleClose()} color=\"secondary\" width=\"fullWidth\">Kembali</ButtonMain>\n              </Grid>\n              <Grid item xs={6}>\n                <ButtonMain id=\"btnNext\" onClick={() => this.createOrder(customerId, itemCartId, paymentId, orderId)} color=\"primary\" width=\"fullWidth\">Lanjutkan</ButtonMain>\n              </Grid>\n            </Grid>\n          )}\n\n        </DialogContent>\n\n      </Dialog>\n\n    );\n  }\n}\nConfirmationDialogPaymentMethod.propTypes = {\n  clearDialog: PropTypes.func.isRequired,\n  PaymentMethod: PropTypes.shape({\n    dialogOpen: PropTypes.bool,\n    groupPayment: PropTypes.string,\n    paymentLogo: PropTypes.string,\n    paymentId: PropTypes.number,\n    itemCartId: PropTypes.string,\n    customerId: PropTypes.number,\n  }).isRequired,\n};\n\n// dirubah menggunakan selector untuk unit test lebih baik\nconst mapStateToProps = (state) => ({\n  PaymentMethod: state.PaymentMethod,\n});\n\nconst mapDispatchToProps = {\n  showDialog, clearDialog, showSnackbar,\n};\n\nexport default connect(null, mapDispatchToProps)(ConfirmationDialogPaymentMethod);\n"]},"metadata":{},"sourceType":"module"}