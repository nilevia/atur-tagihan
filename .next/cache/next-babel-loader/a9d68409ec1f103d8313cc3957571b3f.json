{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { isNotUndefined } from './Validator'; // notes\n// ada masalah dengan react hooks sehingga showSnackbar dijadikan\n// parameter dan disupply dari component\n// unit test selanjutnya tidak perlu mengetes skenario error, hanya sukses\n\nexport default async function CommonNetworkCall(path, method, showSnackbar, dataRequest = '', headers = {}) {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  let _axios;\n\n  switch (method) {\n    case 'get':\n      _axios = axios.get(url);\n      break;\n\n    case 'post':\n      _axios = axios.post(url, dataRequest, {\n        headers\n      });\n      break;\n\n    case 'delete':\n      _axios = axios.delete(url, {\n        headers\n      });\n      break;\n\n    case 'put':\n      _axios = axios.put(url, dataRequest, {\n        headers\n      });\n      break;\n\n    default:\n      _axios = axios();\n  } // eslint-disable-next-line no-return-await\n\n\n  return await _axios.then(apiResponse => {\n    const {\n      response,\n      result\n    } = apiResponse.data;\n\n    if (response.code !== '000000') {\n      showSnackbar('Terjadi Gangguan', 'error');\n      return null;\n    }\n\n    return result;\n  }).catch(error => {\n    if (isNotUndefined(error.response)) {\n      const {\n        data\n      } = error.response;\n      showSnackbar(data.response.user_errors, 'error');\n    } else {\n      showSnackbar(error.toString(), 'error');\n    }\n\n    return null;\n  });\n}","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/utils/CommonNetworkCall.js"],"names":["React","axios","isNotUndefined","CommonNetworkCall","path","method","showSnackbar","dataRequest","headers","BASE_URL","process","env","NEXT_PUBLIC_API_BASE_URL","url","_axios","get","post","delete","put","then","apiResponse","response","result","data","code","catch","error","user_errors","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B,C,CAEA;AACA;AACA;AACA;;AAEA,eAAe,eAAeC,iBAAf,CAAiCC,IAAjC,EAAuCC,MAAvC,EAA+CC,YAA/C,EAA6DC,WAAW,GAAG,EAA3E,EAA+EC,OAAO,GAAG,EAAzF,EAA6F;AAC1G,QAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAA7B;AACA,QAAMC,GAAG,GAAI,GAAEJ,QAAS,GAAEL,IAAK,EAA/B;;AAEA,MAAIU,MAAJ;;AACA,UAAQT,MAAR;AACE,SAAK,KAAL;AACES,MAAAA,MAAM,GAAGb,KAAK,CAACc,GAAN,CAAUF,GAAV,CAAT;AACA;;AACF,SAAK,MAAL;AACEC,MAAAA,MAAM,GAAGb,KAAK,CAACe,IAAN,CAAWH,GAAX,EAAgBN,WAAhB,EAA6B;AAAEC,QAAAA;AAAF,OAA7B,CAAT;AACA;;AACF,SAAK,QAAL;AACEM,MAAAA,MAAM,GAAGb,KAAK,CAACgB,MAAN,CAAaJ,GAAb,EAAkB;AAAEL,QAAAA;AAAF,OAAlB,CAAT;AACA;;AACF,SAAK,KAAL;AACEM,MAAAA,MAAM,GAAGb,KAAK,CAACiB,GAAN,CAAUL,GAAV,EAAeN,WAAf,EAA4B;AAAEC,QAAAA;AAAF,OAA5B,CAAT;AACA;;AACF;AACEM,MAAAA,MAAM,GAAGb,KAAK,EAAd;AAdJ,GAL0G,CAqB1G;;;AACA,SAAO,MAAMa,MAAM,CAChBK,IADU,CACJC,WAAD,IAAiB;AACrB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuBF,WAAW,CAACG,IAAzC;;AAEA,QAAIF,QAAQ,CAACG,IAAT,KAAkB,QAAtB,EAAgC;AAC9BlB,MAAAA,YAAY,CAAC,kBAAD,EAAqB,OAArB,CAAZ;AACA,aAAO,IAAP;AACD;;AACD,WAAOgB,MAAP;AACD,GATU,EAUVG,KAVU,CAUHC,KAAD,IAAW;AAChB,QAAIxB,cAAc,CAACwB,KAAK,CAACL,QAAP,CAAlB,EAAoC;AAClC,YAAM;AAAEE,QAAAA;AAAF,UAAWG,KAAK,CAACL,QAAvB;AACAf,MAAAA,YAAY,CAACiB,IAAI,CAACF,QAAL,CAAcM,WAAf,EAA4B,OAA5B,CAAZ;AACD,KAHD,MAGO;AACLrB,MAAAA,YAAY,CAACoB,KAAK,CAACE,QAAN,EAAD,EAAmB,OAAnB,CAAZ;AACD;;AACD,WAAO,IAAP;AACD,GAlBU,CAAb;AAmBD","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { isNotUndefined } from './Validator';\n\n// notes\n// ada masalah dengan react hooks sehingga showSnackbar dijadikan\n// parameter dan disupply dari component\n// unit test selanjutnya tidak perlu mengetes skenario error, hanya sukses\n\nexport default async function CommonNetworkCall(path, method, showSnackbar, dataRequest = '', headers = {}) {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  let _axios;\n  switch (method) {\n    case 'get':\n      _axios = axios.get(url);\n      break;\n    case 'post':\n      _axios = axios.post(url, dataRequest, { headers });\n      break;\n    case 'delete':\n      _axios = axios.delete(url, { headers });\n      break;\n    case 'put':\n      _axios = axios.put(url, dataRequest, { headers });\n      break;\n    default:\n      _axios = axios();\n  }\n  // eslint-disable-next-line no-return-await\n  return await _axios\n    .then((apiResponse) => {\n      const { response, result } = apiResponse.data;\n\n      if (response.code !== '000000') {\n        showSnackbar('Terjadi Gangguan', 'error');\n        return null;\n      }\n      return result;\n    })\n    .catch((error) => {\n      if (isNotUndefined(error.response)) {\n        const { data } = error.response;\n        showSnackbar(data.response.user_errors, 'error');\n      } else {\n        showSnackbar(error.toString(), 'error');\n      }\n      return null;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}