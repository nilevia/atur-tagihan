{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/components/ConfirmationDialogPaymentMethod.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router'; // Material\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // Redux\n\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { showDialog, clearDialog } from '../redux/paymentMethod/action';\nimport { showSnackbar } from '../redux/snackbar/action'; // Component\n\nimport ButtonMain from './global-component/ButtonMain';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\nexport var ConfirmationDialogPaymentMethod = /*#__PURE__*/function (_Component) {\n  _inherits(ConfirmationDialogPaymentMethod, _Component);\n\n  var _super = _createSuper(ConfirmationDialogPaymentMethod);\n\n  function ConfirmationDialogPaymentMethod(props) {\n    var _this;\n\n    _classCallCheck(this, ConfirmationDialogPaymentMethod);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(ConfirmationDialogPaymentMethod, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.props.clearDialog();\n    }\n  }, {\n    key: \"createOrder\",\n    value: function () {\n      var _createOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(itemCartId, paymentMethodId) {\n        var headers, data, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  isLoading: true\n                });\n                headers = {\n                  'Content-Type': 'application/json'\n                };\n                data = JSON.stringify({\n                  cart_id: itemCartId,\n                  payment_method_id: paymentMethodId\n                });\n                _context.next = 5;\n                return AuthNetworkCall('/order', 'post', this.props.showSnackbar, data, headers);\n\n              case 5:\n                result = _context.sent;\n\n                if (result) {\n                  // get id order, pass to status-pembayaran/id_order\n                  Router.push(\"/status-pembayaran/\");\n                }\n\n                this.setState({\n                  isLoading: false\n                });\n                this.handleClose();\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createOrder(_x, _x2) {\n        return _createOrder.apply(this, arguments);\n      }\n\n      return createOrder;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$PaymentMe = this.props.PaymentMethod,\n          dialogOpen = _this$props$PaymentMe.dialogOpen,\n          groupPayment = _this$props$PaymentMe.groupPayment,\n          paymentLogo = _this$props$PaymentMe.paymentLogo,\n          paymentId = _this$props$PaymentMe.paymentId,\n          itemCartId = _this$props$PaymentMe.itemCartId;\n      var isLoading = this.state.isLoading;\n      return __jsx(Dialog, {\n        disableBackdropClick: true,\n        open: dialogOpen,\n        fullWidth: true,\n        maxWidth: \"xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, __jsx(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        className: \"font-muli-18 bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, \"Konfirmasi\"), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Apakah anda yakin ingin menggunakan :\"), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, groupPayment), __jsx(\"img\", {\n        src: paymentLogo,\n        className: \"payment-method-diaglog-image margin-btm-32\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }), isLoading ? __jsx(CircularProgress, {\n        style: {\n          position: 'sticky',\n          left: '47%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }) : __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, __jsx(ButtonMain, {\n        id: \"btnClose\",\n        onClick: function onClick() {\n          return _this2.handleClose();\n        },\n        color: \"secondary\",\n        width: \"fullWidth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, \"Kembali\")), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, __jsx(ButtonMain, {\n        id: \"btnNext\",\n        onClick: function onClick() {\n          return _this2.createOrder(itemCartId, paymentId);\n        },\n        color: \"primary\",\n        width: \"fullWidth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \"Lanjutkan\")))));\n    }\n  }]);\n\n  return ConfirmationDialogPaymentMethod;\n}(Component);\nConfirmationDialogPaymentMethod.propTypes = {\n  clearDialog: PropTypes.func.isRequired,\n  PaymentMethod: PropTypes.shape({\n    dialogOpen: PropTypes.bool,\n    groupPayment: PropTypes.string,\n    paymentLogo: PropTypes.string,\n    paymentId: PropTypes.number,\n    itemCartId: PropTypes.string\n  }).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    PaymentMethod: state.PaymentMethod\n  };\n};\n\nvar mapDispatchToProps = {\n  showDialog: showDialog,\n  clearDialog: clearDialog,\n  showSnackbar: showSnackbar\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmationDialogPaymentMethod);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/components/ConfirmationDialogPaymentMethod.js"],"names":["React","Component","PropTypes","Router","Dialog","DialogContent","CircularProgress","connect","Grid","showDialog","clearDialog","showSnackbar","ButtonMain","AuthNetworkCall","ConfirmationDialogPaymentMethod","props","state","isLoading","itemCartId","paymentMethodId","setState","headers","data","JSON","stringify","cart_id","payment_method_id","result","push","handleClose","PaymentMethod","dialogOpen","groupPayment","paymentLogo","paymentId","position","left","createOrder","propTypes","func","isRequired","shape","bool","string","number","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\n\n// Material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\n\nimport { showDialog, clearDialog } from '../redux/paymentMethod/action';\nimport { showSnackbar } from '../redux/snackbar/action';\n\n// Component\nimport ButtonMain from './global-component/ButtonMain';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\n\nexport class ConfirmationDialogPaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  handleClose() {\n    this.props.clearDialog();\n  }\n\n  async createOrder(itemCartId, paymentMethodId) {\n    this.setState({ isLoading: true });\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const data = JSON.stringify({\n      cart_id: itemCartId,\n      payment_method_id: paymentMethodId,\n    });\n\n    const result = await AuthNetworkCall('/order', 'post', this.props.showSnackbar, data, headers);\n    if (result) {\n      // get id order, pass to status-pembayaran/id_order\n      Router.push(`/status-pembayaran/`);\n    }\n    this.setState({ isLoading: false });\n    this.handleClose();\n  }\n\n  render() {\n    const {\n      dialogOpen, groupPayment, paymentLogo, paymentId, itemCartId\n    } = this.props.PaymentMethod;\n    const { isLoading } = this.state;\n    return (\n      <Dialog\n        disableBackdropClick\n        open={dialogOpen}\n        fullWidth\n        maxWidth=\"xs\"\n      >\n        <DialogContent>\n          <p className=\"font-muli-18 bold\">Konfirmasi</p>\n          <p className=\"font-muli-14 margin-btm-16\">Apakah anda yakin ingin menggunakan :</p>\n          <p className=\"font-muli-14 margin-btm-16\">{groupPayment}</p>\n          <img src={paymentLogo} className=\"payment-method-diaglog-image margin-btm-32\" />\n\n          {isLoading ? (\n            <CircularProgress style={{ position: 'sticky', left: '47%' }} />\n          ) : (\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              spacing={2}\n            >\n              <Grid item xs={6}>\n                <ButtonMain id=\"btnClose\" onClick={() => this.handleClose()} color=\"secondary\" width=\"fullWidth\">Kembali</ButtonMain>\n              </Grid>\n              <Grid item xs={6}>\n                <ButtonMain id=\"btnNext\" onClick={() => this.createOrder(itemCartId, paymentId)} color=\"primary\" width=\"fullWidth\">Lanjutkan</ButtonMain>\n              </Grid>\n            </Grid>\n          )}\n\n        </DialogContent>\n\n      </Dialog>\n\n    );\n  }\n}\nConfirmationDialogPaymentMethod.propTypes = {\n  clearDialog: PropTypes.func.isRequired,\n  PaymentMethod: PropTypes.shape({\n    dialogOpen: PropTypes.bool,\n    groupPayment: PropTypes.string,\n    paymentLogo: PropTypes.string,\n    paymentId: PropTypes.number,\n    itemCartId: PropTypes.string,\n  }).isRequired,\n};\nconst mapStateToProps = (state) => ({\n  PaymentMethod: state.PaymentMethod,\n});\n\nconst mapDispatchToProps = {\n  showDialog, clearDialog, showSnackbar,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmationDialogPaymentMethod);\n"]},"metadata":{},"sourceType":"module"}