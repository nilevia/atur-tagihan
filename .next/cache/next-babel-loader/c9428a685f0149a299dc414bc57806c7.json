{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react'; // material\n\nimport Grid from '@material-ui/core/Grid';\nimport { Divider } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // component\n\nimport { connect } from 'react-redux';\nimport { getRupiah } from '../utils/Calculate';\nimport { isNotUndefinedAndNotEmpty } from '../utils/Validator';\nimport ConfirmationDialogPaymentMethod from './ConfirmationDialogPaymentMethod'; // redux\n\nimport { showSnackbar } from '../redux/snackbar/action';\nimport { showDialog } from '../redux/paymentMethod/action';\nimport ButtonBack from './global-component/ButtonBack';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\nexport class PaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentMethod: {},\n      cartItemId: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.addCartItemIdToArray(this.props.cartDetail);\n    this.getPaymentMethodList();\n  }\n  /**\n   * @method getPaymentMethodList\n   * @summary get all list payment method\n   * @returns {Promise<void>}\n   */\n\n\n  async getPaymentMethodList() {\n    const result = await AuthNetworkCall('/payment_method/available_payment_method', 'get', this.props.showSnackbar);\n\n    if (result) {\n      this.setState({\n        paymentMethod: result\n      });\n    }\n\n    this.setState({\n      isLoading: false\n    });\n  }\n  /**\n   * @method addCartItemIdToArray\n   * @summary this method to split card item id to array because we need that to create order\n   */\n\n\n  addCartItemIdToArray(cartDetail) {\n    cartDetail.items.map(item => this.state.cartItemId.push(item.id));\n  }\n\n  render() {\n    const {\n      paymentMethod,\n      cartItemId,\n      isLoading\n    } = this.state;\n    const {\n      cartDetail,\n      orderId\n    } = this.props;\n    const {\n      showDialog\n    } = this.props;\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"main-content\",\n      id: \"mainContent\"\n    }, __jsx(ButtonBack, {\n      onClick: this.props.onClose\n    }), __jsx(Divider, null), __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      className: \"margin-top-24 margin-btm-24 txt-center-ver\"\n    }, __jsx(Grid, null, __jsx(\"p\", {\n      className: \"font-muli-300\"\n    }, \"Total tagihan\")), __jsx(Grid, null, __jsx(\"p\", {\n      id: \"orderId\",\n      className: \"font-muli-800 bold txt-end\"\n    }, getRupiah(cartDetail.total)))), __jsx(Divider, null), isLoading ? __jsx(CircularProgress, {\n      style: {\n        position: 'absolute',\n        left: '47%',\n        top: '50%'\n      }\n    }) : __jsx(\"div\", {\n      className: \"margin-top-24\",\n      id: \"partnerSection\"\n    }, __jsx(\"p\", {\n      className: \"font-muli-16 bold margin-btm-16\"\n    }, \"Pilih metode pembayaran\"), isNotUndefinedAndNotEmpty(paymentMethod.e_money) ? __jsx(\"div\", null, __jsx(\"p\", {\n      className: \"font-muli-300 margin-btm-16\"\n    }, \"E-Money\"), __jsx(\"div\", {\n      id: \"secondSection\",\n      className: \"horizontal-scroll margin-btm-32\"\n    }, paymentMethod.e_money.map((item, index) => __jsx(\"img\", {\n      id: `emon${index}`,\n      src: item.icon,\n      className: \"payment-method-card\",\n      onClick: () => showDialog('E-Money', item.icon, item.id, cartItemId, orderId)\n    })))) : null, isNotUndefinedAndNotEmpty(paymentMethod.bank_transfer) ? __jsx(\"div\", null, __jsx(\"p\", {\n      className: \"font-muli-300 margin-btm-16\"\n    }, \"Bank Transfer\"), __jsx(\"div\", {\n      id: \"secondSection\",\n      className: \"horizontal-scroll margin-btm-32\"\n    }, paymentMethod.bank_transfer.map((item, index) => __jsx(\"img\", {\n      id: `bank${index}`,\n      src: item.icon,\n      className: \"payment-method-card\",\n      onClick: () => showDialog('Bank Transfer', item.icon, item.id, cartItemId, orderId)\n    })))) : null, isNotUndefinedAndNotEmpty(paymentMethod.virtual_account) ? __jsx(\"div\", null, __jsx(\"p\", {\n      className: \"font-muli-300 margin-btm-16\"\n    }, \"Virtual Account\"), __jsx(\"div\", {\n      id: \"secondSection\",\n      className: \"horizontal-scroll margin-btm-32\"\n    }, paymentMethod.virtual_account.map((item, index) => __jsx(\"img\", {\n      id: `conv${index}`,\n      src: item.icon,\n      className: \"payment-method-card\",\n      onClick: () => showDialog('Virtual Account', item.icon, item.id, cartItemId, orderId)\n    })))) : null), __jsx(ConfirmationDialogPaymentMethod, null)));\n  }\n\n}\nconst mapDispatchToProps = {\n  showSnackbar,\n  showDialog\n};\nexport default connect(null, mapDispatchToProps)(PaymentMethod);","map":null,"metadata":{},"sourceType":"module"}