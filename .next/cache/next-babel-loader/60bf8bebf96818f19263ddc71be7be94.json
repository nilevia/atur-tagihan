{"ast":null,"code":"var _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/components/ConfirmationDialogPaymentMethod.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router'; // Material\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // Redux\n\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { showDialog, clearDialog } from '../redux/paymentMethod/action';\nimport { showSnackbar } from '../redux/snackbar/action'; // Component\n\nimport ButtonMain from './global-component/ButtonMain';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\nexport class ConfirmationDialogPaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  handleClose() {\n    this.props.clearDialog();\n  }\n\n  async createOrder(itemCartId, paymentMethodId, orderId) {\n    this.setState({\n      isLoading: true\n    });\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const data = JSON.stringify({\n      customer_id: parseInt(customerId, 10),\n      cart_id: itemCartId,\n      payment_method_id: paymentMethodId\n    });\n    const result = await AuthNetworkCall('/order', 'post', this.props.showSnackbar, data, headers);\n\n    if (result) {\n      Router.push(`/status-pembayaran/${orderId}`);\n    }\n\n    this.setState({\n      isLoading: false\n    });\n    this.handleClose();\n  }\n\n  render() {\n    const {\n      dialogOpen,\n      groupPayment,\n      paymentLogo,\n      paymentId,\n      itemCartId,\n      orderId\n    } = this.props.PaymentMethod;\n    const {\n      isLoading\n    } = this.state;\n    return __jsx(Dialog, {\n      disableBackdropClick: true,\n      open: dialogOpen,\n      fullWidth: true,\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, __jsx(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      className: \"font-muli-18 bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Konfirmasi\"), __jsx(\"p\", {\n      className: \"font-muli-14 margin-btm-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Apakah anda yakin ingin menggunakan :\"), __jsx(\"p\", {\n      className: \"font-muli-14 margin-btm-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, groupPayment), __jsx(\"img\", {\n      src: paymentLogo,\n      className: \"payment-method-diaglog-image margin-btm-32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), isLoading ? __jsx(CircularProgress, {\n      style: {\n        position: 'sticky',\n        left: '47%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }) : __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, __jsx(ButtonMain, {\n      id: \"btnClose\",\n      onClick: () => this.handleClose(),\n      color: \"secondary\",\n      width: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Kembali\")), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, __jsx(ButtonMain, {\n      id: \"btnNext\",\n      onClick: () => this.createOrder(itemCartId, paymentId, orderId),\n      color: \"primary\",\n      width: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Lanjutkan\")))));\n  }\n\n}\nConfirmationDialogPaymentMethod.propTypes = {\n  clearDialog: PropTypes.func.isRequired,\n  PaymentMethod: PropTypes.shape({\n    dialogOpen: PropTypes.bool,\n    groupPayment: PropTypes.string,\n    paymentLogo: PropTypes.string,\n    paymentId: PropTypes.number,\n    itemCartId: PropTypes.string,\n    customerId: PropTypes.number\n  }).isRequired\n};\n\nconst mapStateToProps = state => ({\n  PaymentMethod: state.PaymentMethod\n});\n\nconst mapDispatchToProps = {\n  showDialog,\n  clearDialog,\n  showSnackbar\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmationDialogPaymentMethod);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/components/ConfirmationDialogPaymentMethod.js"],"names":["React","Component","PropTypes","Router","Dialog","DialogContent","CircularProgress","connect","Grid","showDialog","clearDialog","showSnackbar","ButtonMain","AuthNetworkCall","ConfirmationDialogPaymentMethod","constructor","props","state","isLoading","handleClose","createOrder","itemCartId","paymentMethodId","orderId","setState","headers","data","JSON","stringify","customer_id","parseInt","customerId","cart_id","payment_method_id","result","push","render","dialogOpen","groupPayment","paymentLogo","paymentId","PaymentMethod","position","left","propTypes","func","isRequired","shape","bool","string","number","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\n\n// Material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\n\nimport { showDialog, clearDialog } from '../redux/paymentMethod/action';\nimport { showSnackbar } from '../redux/snackbar/action';\n\n// Component\nimport ButtonMain from './global-component/ButtonMain';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\n\nexport class ConfirmationDialogPaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  handleClose() {\n    this.props.clearDialog();\n  }\n\n  async createOrder(itemCartId, paymentMethodId, orderId) {\n    this.setState({ isLoading: true });\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const data = JSON.stringify({\n      customer_id: parseInt(customerId, 10),\n      cart_id: itemCartId,\n      payment_method_id: paymentMethodId,\n    });\n\n    const result = await AuthNetworkCall('/order', 'post', this.props.showSnackbar, data, headers);\n    if (result) {\n      Router.push(`/status-pembayaran/${orderId}`);\n    }\n    this.setState({ isLoading: false });\n    this.handleClose();\n  }\n\n  render() {\n    const {\n      dialogOpen, groupPayment, paymentLogo, paymentId, itemCartId, orderId,\n    } = this.props.PaymentMethod;\n    const { isLoading } = this.state;\n    return (\n      <Dialog\n        disableBackdropClick\n        open={dialogOpen}\n        fullWidth\n        maxWidth=\"xs\"\n      >\n        <DialogContent>\n          <p className=\"font-muli-18 bold\">Konfirmasi</p>\n          <p className=\"font-muli-14 margin-btm-16\">Apakah anda yakin ingin menggunakan :</p>\n          <p className=\"font-muli-14 margin-btm-16\">{groupPayment}</p>\n          <img src={paymentLogo} className=\"payment-method-diaglog-image margin-btm-32\" />\n\n          {isLoading ? (\n            <CircularProgress style={{ position: 'sticky', left: '47%' }} />\n          ) : (\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              spacing={2}\n            >\n              <Grid item xs={6}>\n                <ButtonMain id=\"btnClose\" onClick={() => this.handleClose()} color=\"secondary\" width=\"fullWidth\">Kembali</ButtonMain>\n              </Grid>\n              <Grid item xs={6}>\n                <ButtonMain id=\"btnNext\" onClick={() => this.createOrder(itemCartId, paymentId, orderId)} color=\"primary\" width=\"fullWidth\">Lanjutkan</ButtonMain>\n              </Grid>\n            </Grid>\n          )}\n\n        </DialogContent>\n\n      </Dialog>\n\n    );\n  }\n}\nConfirmationDialogPaymentMethod.propTypes = {\n  clearDialog: PropTypes.func.isRequired,\n  PaymentMethod: PropTypes.shape({\n    dialogOpen: PropTypes.bool,\n    groupPayment: PropTypes.string,\n    paymentLogo: PropTypes.string,\n    paymentId: PropTypes.number,\n    itemCartId: PropTypes.string,\n    customerId: PropTypes.number,\n  }).isRequired,\n};\nconst mapStateToProps = (state) => ({\n  PaymentMethod: state.PaymentMethod,\n});\n\nconst mapDispatchToProps = {\n  showDialog, clearDialog, showSnackbar,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmationDialogPaymentMethod);\n"]},"metadata":{},"sourceType":"module"}