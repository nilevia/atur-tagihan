{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { isNotUndefined } from './Validator'; // notes\n// ada masalah dengan react hooks sehingga showSnackbar dijadikan\n// parameter dan disupply dari component\n// unit test selanjutnya tidak perlu mengetes skenario error, hanya sukses\n\n/**\n * @summary memanggil api tanpa auth\n * @param path (url setelah api/v1\n * @param method\n * @param showSnackbar (ambil dari props redux)\n * @param dataRequest (bisa dikosongi)\n * @param headers (bisa dikosongi)\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nexport async function CommonNetworkCall(path, method, showSnackbar, dataRequest = '', headers = {}) {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`; // eslint-disable-next-line no-use-before-define,no-return-await\n\n  return await axiosService(method, url, dataRequest, headers).then(apiResponse => {\n    const {\n      response,\n      result\n    } = apiResponse.data;\n\n    if (response.code !== '000000') {\n      showSnackbar('Terjadi Gangguan', 'error');\n      return null;\n    }\n\n    return result;\n  }).catch(error => {\n    if (isNotUndefined(error.response)) {\n      const {\n        data\n      } = error.response;\n      showSnackbar(data.response.user_errors, 'error');\n    } else {\n      showSnackbar(error.toString(), 'error');\n    }\n\n    return null;\n  });\n}\n/**\n * @summary call api using auth that placed at header, if get 401 we should call refresh token\n * but now then refresh token end point not ready yet, so we directly go to login page and clear storage\n * @param path\n * @param method\n * @param showSnackbar\n * @param dataRequest\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nexport async function AuthNetworkCall(path, method, showSnackbar, dataRequest = '') {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n  const headers = {\n    Authorization: `Bearer ${JSON.parse(localStorage.getItem('token')).access_token}`\n  }; // eslint-disable-next-line no-use-before-define,no-return-await\n\n  return await axiosService(method, url, dataRequest, headers).then(apiResponse => {\n    const {\n      response,\n      result\n    } = apiResponse.data;\n\n    if (response.code !== '000000') {\n      showSnackbar('Terjadi Gangguan', 'error');\n      return null;\n    }\n\n    return result;\n  }).catch(error => {\n    if (isNotUndefined(error.response)) {\n      const {\n        data\n      } = error.response;\n\n      if (error.response.status === 401) {\n        doLogout(showSnackbar);\n      } else showSnackbar(data.response.user_errors, 'error');\n    } else {\n      showSnackbar(error.toString(), 'error');\n    }\n\n    return null;\n  });\n}\n\nfunction doLogout(showSnackbar) {\n  showSnackbar('Terjadi masalah, silahkan login terlebih dahulu', 'error');\n  localStorage.clear();\n  Router.push('/login');\n}\n\nfunction axiosService(method, url, dataRequest = '', headers = {}) {\n  switch (method) {\n    case 'get':\n      return axios.get(url, {\n        headers\n      });\n\n    case 'post':\n      return axios.post(url, dataRequest, {\n        headers\n      });\n\n    case 'delete':\n      return axios.delete(url, {\n        headers\n      });\n\n    case 'put':\n      return axios.put(url, dataRequest, {\n        headers\n      });\n\n    default:\n      return axios();\n  }\n}","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/utils/NetworkCall.js"],"names":["React","axios","Router","isNotUndefined","CommonNetworkCall","path","method","showSnackbar","dataRequest","headers","BASE_URL","process","env","NEXT_PUBLIC_API_BASE_URL","url","axiosService","then","apiResponse","response","result","data","code","catch","error","user_errors","toString","AuthNetworkCall","Authorization","JSON","parse","localStorage","getItem","access_token","status","doLogout","clear","push","get","post","delete","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,aAA/B,C,CAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,iBAAf,CAAiCC,IAAjC,EAAuCC,MAAvC,EAA+CC,YAA/C,EAA6DC,WAAW,GAAG,EAA3E,EAA+EC,OAAO,GAAG,EAAzF,EAA6F;AAClG,QAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAA7B;AACA,QAAMC,GAAG,GAAI,GAAEJ,QAAS,GAAEL,IAAK,EAA/B,CAFkG,CAIlG;;AACA,SAAO,MAAMU,YAAY,CAACT,MAAD,EAASQ,GAAT,EAAcN,WAAd,EAA2BC,OAA3B,CAAZ,CACVO,IADU,CACJC,WAAD,IAAiB;AACrB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuBF,WAAW,CAACG,IAAzC;;AAEA,QAAIF,QAAQ,CAACG,IAAT,KAAkB,QAAtB,EAAgC;AAC9Bd,MAAAA,YAAY,CAAC,kBAAD,EAAqB,OAArB,CAAZ;AACA,aAAO,IAAP;AACD;;AACD,WAAOY,MAAP;AACD,GATU,EAUVG,KAVU,CAUHC,KAAD,IAAW;AAChB,QAAIpB,cAAc,CAACoB,KAAK,CAACL,QAAP,CAAlB,EAAoC;AAClC,YAAM;AAAEE,QAAAA;AAAF,UAAWG,KAAK,CAACL,QAAvB;AACAX,MAAAA,YAAY,CAACa,IAAI,CAACF,QAAL,CAAcM,WAAf,EAA4B,OAA5B,CAAZ;AACD,KAHD,MAGO;AACLjB,MAAAA,YAAY,CAACgB,KAAK,CAACE,QAAN,EAAD,EAAmB,OAAnB,CAAZ;AACD;;AACD,WAAO,IAAP;AACD,GAlBU,CAAb;AAmBD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,eAAf,CAA+BrB,IAA/B,EAAqCC,MAArC,EAA6CC,YAA7C,EAA2DC,WAAW,GAAG,EAAzE,EAA6E;AAClF,QAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAA7B;AACA,QAAMC,GAAG,GAAI,GAAEJ,QAAS,GAAEL,IAAK,EAA/B;AAEA,QAAMI,OAAO,GAAG;AACdkB,IAAAA,aAAa,EAAG,UAASC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,EAA0CC,YAAa;AADlE,GAAhB,CAJkF,CAQlF;;AACA,SAAO,MAAMjB,YAAY,CAACT,MAAD,EAASQ,GAAT,EAAcN,WAAd,EAA2BC,OAA3B,CAAZ,CACVO,IADU,CACJC,WAAD,IAAiB;AACrB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuBF,WAAW,CAACG,IAAzC;;AAEA,QAAIF,QAAQ,CAACG,IAAT,KAAkB,QAAtB,EAAgC;AAC9Bd,MAAAA,YAAY,CAAC,kBAAD,EAAqB,OAArB,CAAZ;AACA,aAAO,IAAP;AACD;;AACD,WAAOY,MAAP;AACD,GATU,EAUVG,KAVU,CAUHC,KAAD,IAAW;AAChB,QAAIpB,cAAc,CAACoB,KAAK,CAACL,QAAP,CAAlB,EAAoC;AAClC,YAAM;AAAEE,QAAAA;AAAF,UAAWG,KAAK,CAACL,QAAvB;;AACA,UAAIK,KAAK,CAACL,QAAN,CAAee,MAAf,KAA0B,GAA9B,EAAmC;AACjCC,QAAAA,QAAQ,CAAC3B,YAAD,CAAR;AACD,OAFD,MAEOA,YAAY,CAACa,IAAI,CAACF,QAAL,CAAcM,WAAf,EAA4B,OAA5B,CAAZ;AACR,KALD,MAKO;AACLjB,MAAAA,YAAY,CAACgB,KAAK,CAACE,QAAN,EAAD,EAAmB,OAAnB,CAAZ;AACD;;AACD,WAAO,IAAP;AACD,GApBU,CAAb;AAqBD;;AAED,SAASS,QAAT,CAAkB3B,YAAlB,EAAgC;AAC9BA,EAAAA,YAAY,CAAC,iDAAD,EAAoD,OAApD,CAAZ;AACAuB,EAAAA,YAAY,CAACK,KAAb;AACAjC,EAAAA,MAAM,CAACkC,IAAP,CAAY,QAAZ;AACD;;AAED,SAASrB,YAAT,CAAsBT,MAAtB,EAA8BQ,GAA9B,EAAmCN,WAAW,GAAG,EAAjD,EAAqDC,OAAO,GAAG,EAA/D,EAAmE;AACjE,UAAQH,MAAR;AACE,SAAK,KAAL;AACE,aAAOL,KAAK,CAACoC,GAAN,CAAUvB,GAAV,EAAe;AAAEL,QAAAA;AAAF,OAAf,CAAP;;AACF,SAAK,MAAL;AACE,aAAOR,KAAK,CAACqC,IAAN,CAAWxB,GAAX,EAAgBN,WAAhB,EAA6B;AAAEC,QAAAA;AAAF,OAA7B,CAAP;;AACF,SAAK,QAAL;AACE,aAAOR,KAAK,CAACsC,MAAN,CAAazB,GAAb,EAAkB;AAAEL,QAAAA;AAAF,OAAlB,CAAP;;AACF,SAAK,KAAL;AACE,aAAOR,KAAK,CAACuC,GAAN,CAAU1B,GAAV,EAAeN,WAAf,EAA4B;AAAEC,QAAAA;AAAF,OAA5B,CAAP;;AACF;AACE,aAAOR,KAAK,EAAZ;AAVJ;AAYD","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { isNotUndefined } from './Validator';\n\n// notes\n// ada masalah dengan react hooks sehingga showSnackbar dijadikan\n// parameter dan disupply dari component\n// unit test selanjutnya tidak perlu mengetes skenario error, hanya sukses\n\n/**\n * @summary memanggil api tanpa auth\n * @param path (url setelah api/v1\n * @param method\n * @param showSnackbar (ambil dari props redux)\n * @param dataRequest (bisa dikosongi)\n * @param headers (bisa dikosongi)\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nexport async function CommonNetworkCall(path, method, showSnackbar, dataRequest = '', headers = {}) {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  // eslint-disable-next-line no-use-before-define,no-return-await\n  return await axiosService(method, url, dataRequest, headers)\n    .then((apiResponse) => {\n      const { response, result } = apiResponse.data;\n\n      if (response.code !== '000000') {\n        showSnackbar('Terjadi Gangguan', 'error');\n        return null;\n      }\n      return result;\n    })\n    .catch((error) => {\n      if (isNotUndefined(error.response)) {\n        const { data } = error.response;\n        showSnackbar(data.response.user_errors, 'error');\n      } else {\n        showSnackbar(error.toString(), 'error');\n      }\n      return null;\n    });\n}\n\n/**\n * @summary call api using auth that placed at header, if get 401 we should call refresh token\n * but now then refresh token end point not ready yet, so we directly go to login page and clear storage\n * @param path\n * @param method\n * @param showSnackbar\n * @param dataRequest\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\nexport async function AuthNetworkCall(path, method, showSnackbar, dataRequest = '') {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  const headers = {\n    Authorization: `Bearer ${JSON.parse(localStorage.getItem('token')).access_token}`,\n  };\n\n  // eslint-disable-next-line no-use-before-define,no-return-await\n  return await axiosService(method, url, dataRequest, headers)\n    .then((apiResponse) => {\n      const { response, result } = apiResponse.data;\n\n      if (response.code !== '000000') {\n        showSnackbar('Terjadi Gangguan', 'error');\n        return null;\n      }\n      return result;\n    })\n    .catch((error) => {\n      if (isNotUndefined(error.response)) {\n        const { data } = error.response;\n        if (error.response.status === 401) {\n          doLogout(showSnackbar);\n        } else showSnackbar(data.response.user_errors, 'error');\n      } else {\n        showSnackbar(error.toString(), 'error');\n      }\n      return null;\n    });\n}\n\nfunction doLogout(showSnackbar) {\n  showSnackbar('Terjadi masalah, silahkan login terlebih dahulu', 'error');\n  localStorage.clear();\n  Router.push('/login');\n}\n\nfunction axiosService(method, url, dataRequest = '', headers = {}) {\n  switch (method) {\n    case 'get':\n      return axios.get(url, { headers });\n    case 'post':\n      return axios.post(url, dataRequest, { headers });\n    case 'delete':\n      return axios.delete(url, { headers });\n    case 'put':\n      return axios.put(url, dataRequest, { headers });\n    default:\n      return axios();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}