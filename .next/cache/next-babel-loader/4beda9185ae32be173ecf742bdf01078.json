{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { isNotUndefined } from './Validator'; // notes\n// ada masalah dengan react hooks sehingga showSnackbar dijadikan\n// parameter dan disupply dari component\n// unit test selanjutnya tidak perlu mengetes skenario error, hanya sukses\n\n/**\n * @summary memanggil api tanpa auth\n * @param path (url setelah api/v1\n * @param method\n * @param showSnackbar gunakan this.props.showSnackbar jika ingin default atau gunakan () => {} jika ingin custom dari page\n * @param dataRequest (bisa dikosongi)\n * @param headers (bisa dikosongi)\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nexport function CommonNetworkCall(_x, _x2, _x3) {\n  return _CommonNetworkCall.apply(this, arguments);\n}\n/**\n * @summary call api using auth that placed at header, if get 401 we should call refresh token\n * but now then refresh token end point not ready yet, so we directly go to login page and clear storage\n * @param path\n * @param method\n * @param showSnackbar, gunakan this.props.showSnackbar jika ingin default atau gunakan () => {} jika ingin custom dari page\n * @param dataRequest\n * @param customHeader\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nfunction _CommonNetworkCall() {\n  _CommonNetworkCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, method, showSnackbar) {\n    var dataRequest,\n        headers,\n        BASE_URL,\n        url,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataRequest = _args.length > 3 && _args[3] !== undefined ? _args[3] : '';\n            headers = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};\n            BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n            url = \"\".concat(BASE_URL).concat(path); // eslint-disable-next-line no-use-before-define,no-return-await\n\n            _context.next = 6;\n            return axiosService(method, url, dataRequest, headers).then(function (apiResponse) {\n              var _apiResponse$data = apiResponse.data,\n                  response = _apiResponse$data.response,\n                  result = _apiResponse$data.result;\n\n              if (response.code !== '000000') {\n                showSnackbar('Terjadi Gangguan', 'error');\n                return null;\n              }\n\n              return result;\n            })[\"catch\"](function (error) {\n              if (isNotUndefined(error.response)) {\n                var data = error.response.data;\n                showSnackbar(data.response.user_errors, 'error');\n              } else {\n                showSnackbar(error.toString(), 'error');\n              }\n\n              return null;\n            });\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _CommonNetworkCall.apply(this, arguments);\n}\n\nexport function AuthNetworkCall(_x4, _x5, _x6) {\n  return _AuthNetworkCall.apply(this, arguments);\n}\n\nfunction _AuthNetworkCall() {\n  _AuthNetworkCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(path, method, showSnackbar) {\n    var dataRequest,\n        customHeader,\n        BASE_URL,\n        url,\n        token,\n        headers,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dataRequest = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : '';\n            customHeader = _args2.length > 4 && _args2[4] !== undefined ? _args2[4] : {};\n            BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n            url = \"\".concat(BASE_URL).concat(path);\n            token = JSON.parse(localStorage.getItem('token'));\n\n            if (!token) {\n              _context2.next = 9;\n              break;\n            }\n\n            headers = _objectSpread(_objectSpread({}, customHeader), {}, {\n              Authorization: \"Bearer \".concat(token.access_token)\n            });\n            _context2.next = 12;\n            break;\n\n          case 9:\n            showSnackbar('Silahkan login terlebih dahulu', 'error');\n            doLogout();\n            return _context2.abrupt(\"return\", null);\n\n          case 12:\n            _context2.next = 14;\n            return axiosService(method, url, dataRequest, headers).then(function (apiResponse) {\n              var _apiResponse$data2 = apiResponse.data,\n                  response = _apiResponse$data2.response,\n                  result = _apiResponse$data2.result;\n\n              if (response.code !== '000000') {\n                showSnackbar('Terjadi Gangguan', 'error');\n                return null;\n              }\n\n              return result;\n            })[\"catch\"](function (error) {\n              if (isNotUndefined(error.response)) {\n                var data = error.response.data;\n\n                if (error.response.status === 401) {\n                  showSnackbar('Terjadi masalah, silahkan login terlebih dahulu', 'error');\n                  doLogout();\n                } else if (error.response.status === 403) {\n                  showSnackbar('Akun anda tidak aktif atau terblokir, silahkan gunakan akun lain', 'error');\n                  doLogout();\n                } else showSnackbar(data.response.user_errors, 'error');\n              } else {\n                showSnackbar(error.toString(), 'error');\n              }\n\n              return null;\n            });\n\n          case 14:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _AuthNetworkCall.apply(this, arguments);\n}\n\nfunction doLogout() {\n  localStorage.clear();\n  Router.push('/login');\n}\n\nfunction axiosService(method, url) {\n  var dataRequest = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  switch (method) {\n    case 'get':\n      return axios.get(url, {\n        headers: headers\n      });\n\n    case 'post':\n      return axios.post(url, dataRequest, {\n        headers: headers\n      });\n\n    case 'delete':\n      return axios[\"delete\"](url, {\n        headers: headers\n      });\n\n    case 'put':\n      return axios.put(url, dataRequest, {\n        headers: headers\n      });\n\n    default:\n      return axios();\n  }\n}\n/**\n * @summary get user status\n *  empty = if no user logged\n *  logged = if user logged and token active\n *  expired = if token expired\n *  inactive = if user blocked\n *  error = if network error\n * @returns {Promise<string>}\n */\n\n\nexport function isUserLoggedValid() {\n  return _isUserLoggedValid.apply(this, arguments);\n}\n\nfunction _isUserLoggedValid() {\n  _isUserLoggedValid = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var URL, headers, token;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            URL = \"\".concat(process.env.NEXT_PUBLIC_API_BASE_URL, \"/customer/profile\");\n            token = JSON.parse(localStorage.getItem('token'));\n\n            if (!token) {\n              _context3.next = 6;\n              break;\n            }\n\n            headers = {\n              Authorization: \"Bearer \".concat(token.access_token)\n            };\n            _context3.next = 7;\n            break;\n\n          case 6:\n            return _context3.abrupt(\"return\", 'empty');\n\n          case 7:\n            _context3.next = 9;\n            return axios.get(URL, {\n              headers: headers\n            }).then(function () {\n              return 'logged';\n            })[\"catch\"](function (error) {\n              if (isNotUndefined(error.response)) {\n                if (error.response.status === 401) {\n                  return 'expired';\n                }\n\n                if (error.response.status === 403) {\n                  return 'inactive';\n                }\n\n                return 'error';\n              }\n\n              return 'error';\n            });\n\n          case 9:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _isUserLoggedValid.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}