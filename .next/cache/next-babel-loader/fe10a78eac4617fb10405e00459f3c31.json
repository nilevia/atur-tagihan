{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/components/global-component/CustomDialog.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid'; // Component\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent'; // Redux\n\nimport ButtonMain from './ButtonMain';\nexport var CustomDialog = /*#__PURE__*/function (_Component) {\n  _inherits(CustomDialog, _Component);\n\n  var _super = _createSuper(CustomDialog);\n\n  function CustomDialog(props) {\n    var _this;\n\n    _classCallCheck(this, CustomDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(CustomDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        open: this.props.open\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(method) {\n      this.setState({\n        open: false\n      });\n      method();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          title = _this$props.title,\n          content = _this$props.content,\n          onConfirm = _this$props.onConfirm,\n          onCancel = _this$props.onCancel,\n          cancelText = _this$props.cancelText,\n          confirmText = _this$props.confirmText,\n          mode = _this$props.mode;\n      return __jsx(Dialog, {\n        open: this.state.open,\n        fullWidth: true,\n        maxWidth: \"xs\",\n        onClose: function onClose() {\n          return _this2.setState({\n            open: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, __jsx(DialogContent, {\n        className: \"txt-center-hoz\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        className: \"font-muli-14 bold margin-btm-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, title), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, content), __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: mode === 'vertical' ? 12 : 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, __jsx(ButtonMain, {\n        id: \"btnClose\",\n        onClick: function onClick() {\n          return _this2.onClick(onCancel);\n        },\n        color: \"secondary\",\n        width: \"fullWidth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, cancelText)), __jsx(Grid, {\n        item: true,\n        xs: mode === 'vertical' ? 12 : 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, __jsx(ButtonMain, {\n        id: \"btnNext\",\n        onClick: function onClick() {\n          return _this2.onClick(onConfirm);\n        },\n        color: \"primary\",\n        width: \"fullWidth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, confirmText)))));\n    }\n  }]);\n\n  return CustomDialog;\n}(Component);\nexport default CustomDialog;","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/components/global-component/CustomDialog.js"],"names":["React","Component","Grid","Dialog","DialogContent","ButtonMain","CustomDialog","props","state","open","setState","method","title","content","onConfirm","onCancel","cancelText","confirmText","mode","onClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\n// Component\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\n// Redux\nimport ButtonMain from './ButtonMain';\n\nexport class CustomDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ open : this.props.open });\n  }\n\n  onClick(method) {\n    this.setState({ open: false });\n    method();\n  }\n\n  render() {\n    const {\n      title, content, onConfirm, onCancel, cancelText, confirmText, mode\n    } = this.props;\n    return (\n      <Dialog\n        open={this.state.open}\n        fullWidth\n        maxWidth=\"xs\"\n        onClose={() => this.setState({ open: false })}\n      >\n        <DialogContent className=\"txt-center-hoz\">\n          <p className=\"font-muli-14 bold margin-btm-8\">{title}</p>\n          <p className=\"font-muli-14 margin-btm-16\">{content}</p>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            spacing={1}\n          >\n            <Grid item xs={mode === 'vertical' ? 12 : 6}>\n              <ButtonMain id=\"btnClose\" onClick={() => this.onClick(onCancel)} color=\"secondary\" width=\"fullWidth\">{cancelText}</ButtonMain>\n            </Grid>\n            <Grid item xs={mode === 'vertical' ? 12 : 6}>\n              <ButtonMain id=\"btnNext\" onClick={() => this.onClick(onConfirm)} color=\"primary\" width=\"fullWidth\">{confirmText}</ButtonMain>\n            </Grid>\n          </Grid>\n\n        </DialogContent>\n\n      </Dialog>\n\n    );\n  }\n}\nexport default CustomDialog\n"]},"metadata":{},"sourceType":"module"}