{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/components/PaymentMethod.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport axios from 'axios'; // material\n\nimport Grid from '@material-ui/core/Grid';\nimport { Divider } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // component\n\nimport { connect } from 'react-redux';\nimport { getRupiah } from '../utils/Calculate';\nimport { isNotUndefined, isNotUndefinedAndNotEmpty } from '../utils/Validator';\nimport ConfirmationDialogPaymentMethod from './ConfirmationDialogPaymentMethod'; // redux\n\nimport { showSnackbar } from '../redux/snackbar/action';\nimport { showDialog } from '../redux/paymentMethod/action';\nimport ButtonBack from './global-component/ButtonBack';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\nexport var PaymentMethod = /*#__PURE__*/function (_Component) {\n  _inherits(PaymentMethod, _Component);\n\n  var _super = _createSuper(PaymentMethod);\n\n  function PaymentMethod(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentMethod);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      paymentMethod: {},\n      cartItemId: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(PaymentMethod, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.addCartItemIdToArray(this.props.cartDetail);\n      this.getPaymentMethodList();\n    }\n    /**\n     * @method getPaymentMethodList\n     * @summary get all list payment method\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"getPaymentMethodList\",\n    value: function () {\n      var _getPaymentMethodList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return AuthNetworkCall('/payment_method/available_payment_method', 'get', this.props.showSnackbar);\n\n              case 2:\n                result = _context.sent;\n\n                if (result) {\n                  this.setState({\n                    paymentMethod: result\n                  });\n                }\n\n                this.setState({\n                  isLoading: false\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getPaymentMethodList() {\n        return _getPaymentMethodList.apply(this, arguments);\n      }\n\n      return getPaymentMethodList;\n    }()\n    /**\n     * @method addCartItemIdToArray\n     * @summary this method to split card item id to array because we need that to create order\n     */\n\n  }, {\n    key: \"addCartItemIdToArray\",\n    value: function addCartItemIdToArray(cartDetail) {\n      var _this2 = this;\n\n      cartDetail.items.map(function (item) {\n        return _this2.state.cartItemId.push(item.id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          paymentMethod = _this$state.paymentMethod,\n          cartItemId = _this$state.cartItemId,\n          isLoading = _this$state.isLoading;\n      var _this$props = this.props,\n          cartDetail = _this$props.cartDetail,\n          custId = _this$props.custId,\n          orderId = _this$props.orderId;\n      var showDialog = this.props.showDialog;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"main-content\",\n        id: \"mainContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, __jsx(ButtonBack, {\n        onClick: this.props.onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }), __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }), __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        className: \"margin-top-24 margin-btm-24 txt-center-ver\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        className: \"font-muli-300\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, \"Total tagihan\")), __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        id: \"orderId\",\n        className: \"font-muli-800 bold txt-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, getRupiah(cartDetail.total)))), __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }), isLoading ? __jsx(CircularProgress, {\n        style: {\n          position: 'absolute',\n          left: '47%',\n          top: '50%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }) : __jsx(\"div\", {\n        className: \"margin-top-24\",\n        id: \"partnerSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, __jsx(\"p\", {\n        className: \"font-muli-16 bold margin-btm-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, \"Pilih metode pembayaran\"), isNotUndefinedAndNotEmpty(paymentMethod.e_money) ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      }, __jsx(\"p\", {\n        className: \"font-muli-300 margin-btm-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, \"E-Money\"), __jsx(\"div\", {\n        id: \"secondSection\",\n        className: \"horizontal-scroll margin-btm-32\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, paymentMethod.e_money.map(function (item, index) {\n        return __jsx(\"img\", {\n          id: \"emon\".concat(index),\n          src: item.icon,\n          className: \"payment-method-card\",\n          onClick: function onClick() {\n            return showDialog('E-Money', item.icon, item.id, custId, cartItemId, orderId);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        });\n      }))) : null, isNotUndefinedAndNotEmpty(paymentMethod.bank_transfer) ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, __jsx(\"p\", {\n        className: \"font-muli-300 margin-btm-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, \"Bank Transfer\"), __jsx(\"div\", {\n        id: \"secondSection\",\n        className: \"horizontal-scroll margin-btm-32\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, paymentMethod.bank_transfer.map(function (item, index) {\n        return __jsx(\"img\", {\n          id: \"bank\".concat(index),\n          src: item.icon,\n          className: \"payment-method-card\",\n          onClick: function onClick() {\n            return showDialog('Bank Transfer', item.icon, item.id, custId, cartItemId, orderId);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }\n        });\n      }))) : null, isNotUndefinedAndNotEmpty(paymentMethod.virtual_account) ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, __jsx(\"p\", {\n        className: \"font-muli-300 margin-btm-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, \"Virtual Account\"), __jsx(\"div\", {\n        id: \"secondSection\",\n        className: \"horizontal-scroll margin-btm-32\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, paymentMethod.virtual_account.map(function (item, index) {\n        return __jsx(\"img\", {\n          id: \"conv\".concat(index),\n          src: item.icon,\n          className: \"payment-method-card\",\n          onClick: function onClick() {\n            return showDialog('Virtual Account', item.icon, item.id, custId, cartItemId, orderId);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        });\n      }))) : null), __jsx(ConfirmationDialogPaymentMethod, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return PaymentMethod;\n}(Component);\nvar mapDispatchToProps = {\n  showSnackbar: showSnackbar,\n  showDialog: showDialog\n};\nexport default connect(null, mapDispatchToProps)(PaymentMethod);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/components/PaymentMethod.js"],"names":["React","Component","axios","Grid","Divider","CircularProgress","connect","getRupiah","isNotUndefined","isNotUndefinedAndNotEmpty","ConfirmationDialogPaymentMethod","showSnackbar","showDialog","ButtonBack","AuthNetworkCall","PaymentMethod","props","state","paymentMethod","cartItemId","isLoading","addCartItemIdToArray","cartDetail","getPaymentMethodList","result","setState","items","map","item","push","id","custId","orderId","onClose","total","position","left","top","e_money","index","icon","bank_transfer","virtual_account","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n// material\nimport Grid from '@material-ui/core/Grid';\nimport { Divider } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// component\nimport { connect } from 'react-redux';\nimport { getRupiah } from '../utils/Calculate';\nimport { isNotUndefined, isNotUndefinedAndNotEmpty } from '../utils/Validator';\nimport ConfirmationDialogPaymentMethod from './ConfirmationDialogPaymentMethod';\n\n// redux\nimport { showSnackbar } from '../redux/snackbar/action';\nimport { showDialog } from '../redux/paymentMethod/action';\nimport ButtonBack from './global-component/ButtonBack';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\n\nexport class PaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentMethod: {},\n      cartItemId: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.addCartItemIdToArray(this.props.cartDetail);\n    this.getPaymentMethodList();\n  }\n\n  /**\n   * @method getPaymentMethodList\n   * @summary get all list payment method\n   * @returns {Promise<void>}\n   */\n  async getPaymentMethodList() {\n    const result = await AuthNetworkCall('/payment_method/available_payment_method', 'get', this.props.showSnackbar);\n    if (result) {\n      this.setState({ paymentMethod: result });\n    }\n    this.setState({ isLoading: false });\n  }\n\n  /**\n   * @method addCartItemIdToArray\n   * @summary this method to split card item id to array because we need that to create order\n   */\n  addCartItemIdToArray(cartDetail) {\n    cartDetail.items.map((item) => (\n      this.state.cartItemId.push(item.id)\n    ));\n  }\n\n  render() {\n    const { paymentMethod, cartItemId, isLoading } = this.state;\n    const { cartDetail, custId, orderId } = this.props;\n    const { showDialog } = this.props;\n    return (\n      <div>\n\n        <div className=\"main-content\" id=\"mainContent\">\n          <ButtonBack onClick={this.props.onClose} />\n          <Divider />\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            className=\"margin-top-24 margin-btm-24 txt-center-ver\"\n          >\n            <Grid>\n              <p className=\"font-muli-300\">Total tagihan</p>\n            </Grid>\n            <Grid>\n              <p id=\"orderId\" className=\"font-muli-800 bold txt-end\">\n                {getRupiah(cartDetail.total)}\n              </p>\n            </Grid>\n          </Grid>\n          <Divider />\n\n          {isLoading\n            ? <CircularProgress style={{ position: 'absolute', left: '47%', top: '50%' }} />\n            : (\n              <div className=\"margin-top-24\" id=\"partnerSection\">\n                <p className=\"font-muli-16 bold margin-btm-16\">Pilih metode pembayaran</p>\n\n                {/* Struktur looping fix ketika real end point sudah ready */}\n\n                {isNotUndefinedAndNotEmpty(paymentMethod.e_money) ? (\n                  <div>\n                    <p className=\"font-muli-300 margin-btm-16\">E-Money</p>\n                    <div id=\"secondSection\" className=\"horizontal-scroll margin-btm-32\">\n                      {paymentMethod.e_money.map((item, index) => (\n                        <img id={`emon${index}`} src={item.icon} className=\"payment-method-card\" onClick={() => showDialog('E-Money', item.icon, item.id, custId, cartItemId, orderId)} />\n                      ))}\n                    </div>\n                  </div>\n                ) : null}\n                {isNotUndefinedAndNotEmpty(paymentMethod.bank_transfer) ? (\n                  <div>\n                    <p className=\"font-muli-300 margin-btm-16\">Bank Transfer</p>\n                    <div id=\"secondSection\" className=\"horizontal-scroll margin-btm-32\">\n                      {paymentMethod.bank_transfer.map((item, index) => (\n                        <img id={`bank${index}`} src={item.icon} className=\"payment-method-card\" onClick={() => showDialog('Bank Transfer', item.icon, item.id, custId, cartItemId, orderId)} />\n                      ))}\n                    </div>\n                  </div>\n                ) : null}\n                {isNotUndefinedAndNotEmpty(paymentMethod.virtual_account) ? (\n                  <div>\n                    <p className=\"font-muli-300 margin-btm-16\">Virtual Account</p>\n                    <div id=\"secondSection\" className=\"horizontal-scroll margin-btm-32\">\n                      {paymentMethod.virtual_account.map((item, index) => (\n                        <img id={`conv${index}`} src={item.icon} className=\"payment-method-card\" onClick={() => showDialog('Virtual Account', item.icon, item.id, custId, cartItemId, orderId)} />\n                      ))}\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            )}\n          <ConfirmationDialogPaymentMethod />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar, showDialog,\n};\n\nexport default connect(null, mapDispatchToProps)(PaymentMethod);\n"]},"metadata":{},"sourceType":"module"}