{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createPromise } from 'redux-promise-middleware';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport SnackbarReducer from './snackbar/reducer';\nimport PaymentMethodReducer from './paymentMethod/reducer';\nimport ProductOrderDetailReducer from './productOrderDetail/reducer';\nimport BasicConfirmationDialogReducer from './basicConfimationDialog/reducer';\nvar rootReducer = combineReducers({\n  Snackbar: SnackbarReducer,\n  PaymentMethod: PaymentMethodReducer,\n  ProductOrderDetail: ProductOrderDetailReducer,\n  BasicConfirmationDialog: BasicConfirmationDialogReducer\n});\nvar promise = createPromise({\n  promiseTypeSuffixes: ['LOADING', 'SUCCESS', 'ERROR']\n});\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk, promise)));\nexport default store;","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/redux/index.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","createPromise","composeWithDevTools","SnackbarReducer","PaymentMethodReducer","ProductOrderDetailReducer","BasicConfirmationDialogReducer","rootReducer","Snackbar","PaymentMethod","ProductOrderDetail","BasicConfirmationDialog","promise","promiseTypeSuffixes","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,yBAAP,MAAsC,8BAAtC;AACA,OAAOC,8BAAP,MAA2C,kCAA3C;AAEA,IAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,QAAQ,EAAEL,eADwB;AAElCM,EAAAA,aAAa,EAAEL,oBAFmB;AAGlCM,EAAAA,kBAAkB,EAAEL,yBAHc;AAIlCM,EAAAA,uBAAuB,EAAEL;AAJS,CAAD,CAAnC;AAQA,IAAMM,OAAO,GAAGX,aAAa,CAAC;AAC5BY,EAAAA,mBAAmB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB;AADO,CAAD,CAA7B;AAGA,IAAMC,KAAK,GAAGjB,WAAW,CACvBU,WADuB,EAEvBL,mBAAmB,CAACH,eAAe,CAACC,KAAD,EAAQY,OAAR,CAAhB,CAFI,CAAzB;AAIA,eAAeE,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createPromise } from 'redux-promise-middleware';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport SnackbarReducer from './snackbar/reducer';\nimport PaymentMethodReducer from './paymentMethod/reducer';\nimport ProductOrderDetailReducer from './productOrderDetail/reducer';\nimport BasicConfirmationDialogReducer from './basicConfimationDialog/reducer';\n\nconst rootReducer = combineReducers({\n  Snackbar: SnackbarReducer,\n  PaymentMethod: PaymentMethodReducer,\n  ProductOrderDetail: ProductOrderDetailReducer,\n  BasicConfirmationDialog: BasicConfirmationDialogReducer,\n\n});\n\nconst promise = createPromise({\n  promiseTypeSuffixes: ['LOADING', 'SUCCESS', 'ERROR'],\n});\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk, promise)),\n);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}