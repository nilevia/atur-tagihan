{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { clearSnackbar } from '../../redux/snackbar/action';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { connect } from \"react-redux\";\n/**\n * @class GSnackbar\n * @summary this class is for global snackbar that will show up above layout page\n * so transition would be smooth\n * @param call using redux actions showSnackbar(message, {info or error} )\n * @returns {*}\n * @constructor\n */\n\nexport class GSnackbar extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClose\", () => {\n      const {\n        clearSnackbar\n      } = this.props;\n      clearSnackbar();\n    });\n\n    this.state = {};\n  }\n\n  render() {\n    const {\n      snackbarOpen,\n      snackbarMessage,\n      snackbarType\n    } = this.props.Snackbar;\n    return __jsx(Fragment, null, __jsx(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: snackbarOpen,\n      autoHideDuration: 3000,\n      onClose: () => this.handleClose(),\n      \"aria-describedby\": \"client-snackbar\"\n    }, __jsx(MuiAlert, {\n      elevation: 20,\n      style: {\n        alignItems: 'center',\n        textAlign: 'center'\n      },\n      variant: \"filled\",\n      onClose: () => this.handleClose(),\n      severity: snackbarType\n    }, snackbarMessage)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  Snackbar: state.Snackbar\n});\n\nconst mapDispatchToProps = {\n  clearSnackbar\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GSnackbar);","map":null,"metadata":{},"sourceType":"module"}