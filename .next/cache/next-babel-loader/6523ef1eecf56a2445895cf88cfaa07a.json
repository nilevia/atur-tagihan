{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport GoogleLogin from 'react-google-login'; // material\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider'; // component\n\nimport { connect } from 'react-redux';\nimport ButtonBack from '../../components/global-component/ButtonBack'; // redux\n\nimport { showSnackbar } from '../../redux/snackbar/action';\nimport { BlockDialog } from '../../components/global-component/BlockDialog';\nimport { CommonNetworkCall } from '../../utils/NetworkCall';\nexport var Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n  /**\n   *  @summary this method mapping google response and get token then post it to backend, if success\n   *  the response google data will be saved on local\n   *  BE do validating to token given\n   * */\n\n\n  _createClass(Login, [{\n    key: \"onSuccessLogin\",\n    value: function () {\n      var _onSuccessLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(responseGoogle) {\n        var data, headers, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  isLoading: true\n                });\n                data = JSON.stringify({\n                  access_token: responseGoogle.accessToken,\n                  token_id: responseGoogle.tokenId\n                });\n                headers = {\n                  'Content-Type': 'application/json'\n                };\n                _context.next = 5;\n                return CommonNetworkCall('/customer/auth/social_login/google', 'post', this.props.showSnackbar, data, headers);\n\n              case 5:\n                result = _context.sent;\n                this.setState({\n                  isLoading: false\n                });\n\n                if (result) {\n                  localStorage.setItem('token', JSON.stringify(result)); // localStorage.setItem('profile', JSON.stringify(responseGoogle.profileObj));\n\n                  if (Router.query.ref) Router.push(Router.query.ref); // else Router.push('/akun');\n                  else Router.back();\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onSuccessLogin(_x) {\n        return _onSuccessLogin.apply(this, arguments);\n      }\n\n      return onSuccessLogin;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"main-content\",\n        id: \"mainContent\"\n      }, __jsx(ButtonBack, {\n        id: \"btnBack\",\n        onClick: function onClick() {\n          return Router.back();\n        }\n      }), __jsx(Divider, null), __jsx(\"div\", {\n        className: \"txt-center-hoz font-muli-16\",\n        style: {\n          marginTop: '130px'\n        }\n      }, __jsx(\"p\", null, \"Hi...\"), __jsx(\"p\", null, \"Selamat datang di BayarTagihan\")), __jsx(\"div\", {\n        className: \"txt-center-hoz pointer margin-top-36 margin-btm-24\"\n      }, __jsx(GoogleLogin, {\n        clientId: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID,\n        render: function render(renderProps) {\n          return __jsx(Button, {\n            variant: \"outlined\",\n            startIcon: __jsx(\"img\", {\n              width: 16,\n              src: \"/icon/ic_google.png\"\n            }),\n            size: \"large\",\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            style: {\n              textTransform: 'none'\n            }\n          }, __jsx(\"span\", {\n            className: \"font-muli-14 bold\"\n          }, \"Masuk atau daftar dengan Google\"));\n        },\n        onSuccess: function onSuccess(responseGoogle) {\n          return _this2.onSuccessLogin(responseGoogle);\n        } // onFailure={responseGoogle}\n        ,\n        cookiePolicy: \"single_host_origin\"\n      }), __jsx(BlockDialog, {\n        isOpen: this.state.isLoading\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\nvar mapDispatchToProps = {\n  showSnackbar: showSnackbar\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":null,"metadata":{},"sourceType":"module"}