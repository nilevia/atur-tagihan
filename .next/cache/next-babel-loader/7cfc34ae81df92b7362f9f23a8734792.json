{"ast":null,"code":"var _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/components/PaymentMethod.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport axios from 'axios'; // material\n\nimport Grid from '@material-ui/core/Grid';\nimport { Divider } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // component\n\nimport { connect } from 'react-redux';\nimport { getRupiah } from '../utils/Calculate';\nimport { isNotUndefined, isNotUndefinedAndNotEmpty } from '../utils/Validator';\nimport ConfirmationDialogPaymentMethod from './ConfirmationDialogPaymentMethod'; // redux\n\nimport { showSnackbar } from '../redux/snackbar/action';\nimport { showDialog } from '../redux/paymentMethod/action';\nimport ButtonBack from './global-component/ButtonBack';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\nexport class PaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentMethod: {},\n      cartItemId: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.addCartItemIdToArray(this.props.cartDetail);\n    this.getPaymentMethodList();\n  }\n  /**\n   * @method getPaymentMethodList\n   * @summary get all list payment method\n   * @returns {Promise<void>}\n   */\n\n\n  async getPaymentMethodList() {\n    this.setState({\n      paymentMethod: await AuthNetworkCall('/payment_method/available_payment_method', 'get', this.props.showSnackbar)\n    });\n    this.setState({\n      isLoading: false\n    }); // const { showSnackbar } = this.props;\n    // const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n    // const url = `${BASE_URL}/payment_method/available_payment_method/atur_tagihan`;\n    //\n    // await axios\n    //   .get(url)\n    //   .then(async (apiResponse) => {\n    //     const { response, result } = apiResponse.data;\n    //\n    //     if (response.code !== '000000') {\n    //       showSnackbar('Terjadi Gangguan', 'error');\n    //     } else {\n    //       this.setState({ paymentMethod: result });\n    //     }\n    //     this.setState({ isLoading: false });\n    //   })\n    //   .catch(async (error) => {\n    //     if (isNotUndefined(error.response)) {\n    //       const { data } = error.response;\n    //       showSnackbar(data.response.user_errors, 'error');\n    //     } else {\n    //       showSnackbar(error.toString(), 'error');\n    //     }\n    //     this.setState({ isLoading: false });\n    //   });\n  }\n  /**\n   * @method addCartItemIdToArray\n   * @summary this method to split card item id to array because we need that to create order\n   */\n\n\n  addCartItemIdToArray(cartDetail) {\n    cartDetail.items.map(item => this.state.cartItemId.push(item.id));\n  }\n\n  render() {\n    const {\n      paymentMethod,\n      cartItemId,\n      isLoading\n    } = this.state;\n    const {\n      cartDetail,\n      custId,\n      orderId\n    } = this.props;\n    const {\n      showDialog\n    } = this.props;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"main-content\",\n      id: \"mainContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(ButtonBack, {\n      onClick: this.props.onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      className: \"margin-top-24 margin-btm-24 txt-center-ver\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      className: \"font-muli-300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"Total tagihan\")), __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      id: \"orderId\",\n      className: \"font-muli-800 bold txt-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, getRupiah(cartDetail.total)))), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), isLoading ? __jsx(CircularProgress, {\n      style: {\n        position: 'absolute',\n        left: '47%',\n        top: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }) : __jsx(\"div\", {\n      className: \"margin-top-24\",\n      id: \"partnerSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      className: \"font-muli-16 bold margin-btm-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Pilih metode pembayaran\"), isNotUndefinedAndNotEmpty(paymentMethod.e_money) ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      className: \"font-muli-300 margin-btm-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"E-Money\"), __jsx(\"div\", {\n      id: \"secondSection\",\n      className: \"horizontal-scroll margin-btm-32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, paymentMethod.e_money.map((item, index) => __jsx(\"img\", {\n      id: `emon${index}`,\n      src: item.icon,\n      className: \"payment-method-card\",\n      onClick: () => showDialog('E-Money', item.icon, item.id, custId, cartItemId, orderId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    })))) : null, isNotUndefinedAndNotEmpty(paymentMethod.bank_transfer) ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      className: \"font-muli-300 margin-btm-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Bank Transfer\"), __jsx(\"div\", {\n      id: \"secondSection\",\n      className: \"horizontal-scroll margin-btm-32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, paymentMethod.bank_transfer.map((item, index) => __jsx(\"img\", {\n      id: `bank${index}`,\n      src: item.icon,\n      className: \"payment-method-card\",\n      onClick: () => showDialog('Bank Transfer', item.icon, item.id, custId, cartItemId, orderId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    })))) : null, isNotUndefinedAndNotEmpty(paymentMethod.virtual_account) ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      className: \"font-muli-300 margin-btm-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Virtual Account\"), __jsx(\"div\", {\n      id: \"secondSection\",\n      className: \"horizontal-scroll margin-btm-32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, paymentMethod.virtual_account.map((item, index) => __jsx(\"img\", {\n      id: `conv${index}`,\n      src: item.icon,\n      className: \"payment-method-card\",\n      onClick: () => showDialog('Virtual Account', item.icon, item.id, custId, cartItemId, orderId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    })))) : null), __jsx(ConfirmationDialogPaymentMethod, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nconst mapDispatchToProps = {\n  showSnackbar,\n  showDialog\n};\nexport default connect(null, mapDispatchToProps)(PaymentMethod);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/components/PaymentMethod.js"],"names":["React","Component","axios","Grid","Divider","CircularProgress","connect","getRupiah","isNotUndefined","isNotUndefinedAndNotEmpty","ConfirmationDialogPaymentMethod","showSnackbar","showDialog","ButtonBack","AuthNetworkCall","PaymentMethod","constructor","props","state","paymentMethod","cartItemId","isLoading","componentDidMount","addCartItemIdToArray","cartDetail","getPaymentMethodList","setState","items","map","item","push","id","render","custId","orderId","onClose","total","position","left","top","e_money","index","icon","bank_transfer","virtual_account","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n// material\nimport Grid from '@material-ui/core/Grid';\nimport { Divider } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// component\nimport { connect } from 'react-redux';\nimport { getRupiah } from '../utils/Calculate';\nimport { isNotUndefined, isNotUndefinedAndNotEmpty } from '../utils/Validator';\nimport ConfirmationDialogPaymentMethod from './ConfirmationDialogPaymentMethod';\n\n// redux\nimport { showSnackbar } from '../redux/snackbar/action';\nimport { showDialog } from '../redux/paymentMethod/action';\nimport ButtonBack from './global-component/ButtonBack';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\n\nexport class PaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentMethod: {},\n      cartItemId: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.addCartItemIdToArray(this.props.cartDetail);\n    this.getPaymentMethodList();\n  }\n\n  /**\n   * @method getPaymentMethodList\n   * @summary get all list payment method\n   * @returns {Promise<void>}\n   */\n  async getPaymentMethodList() {\n    this.setState({ paymentMethod: await AuthNetworkCall('/payment_method/available_payment_method', 'get', this.props.showSnackbar) });\n    this.setState({ isLoading: false });\n    // const { showSnackbar } = this.props;\n    // const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n    // const url = `${BASE_URL}/payment_method/available_payment_method/atur_tagihan`;\n    //\n    // await axios\n    //   .get(url)\n    //   .then(async (apiResponse) => {\n    //     const { response, result } = apiResponse.data;\n    //\n    //     if (response.code !== '000000') {\n    //       showSnackbar('Terjadi Gangguan', 'error');\n    //     } else {\n    //       this.setState({ paymentMethod: result });\n    //     }\n    //     this.setState({ isLoading: false });\n    //   })\n    //   .catch(async (error) => {\n    //     if (isNotUndefined(error.response)) {\n    //       const { data } = error.response;\n    //       showSnackbar(data.response.user_errors, 'error');\n    //     } else {\n    //       showSnackbar(error.toString(), 'error');\n    //     }\n    //     this.setState({ isLoading: false });\n    //   });\n  }\n\n  /**\n   * @method addCartItemIdToArray\n   * @summary this method to split card item id to array because we need that to create order\n   */\n  addCartItemIdToArray(cartDetail) {\n    cartDetail.items.map((item) => (\n      this.state.cartItemId.push(item.id)\n    ));\n  }\n\n  render() {\n    const { paymentMethod, cartItemId, isLoading } = this.state;\n    const { cartDetail, custId, orderId } = this.props;\n    const { showDialog } = this.props;\n    return (\n      <div>\n\n        <div className=\"main-content\" id=\"mainContent\">\n          <ButtonBack onClick={this.props.onClose} />\n          <Divider />\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            className=\"margin-top-24 margin-btm-24 txt-center-ver\"\n          >\n            <Grid>\n              <p className=\"font-muli-300\">Total tagihan</p>\n            </Grid>\n            <Grid>\n              <p id=\"orderId\" className=\"font-muli-800 bold txt-end\">\n                {getRupiah(cartDetail.total)}\n              </p>\n            </Grid>\n          </Grid>\n          <Divider />\n\n          {isLoading\n            ? <CircularProgress style={{ position: 'absolute', left: '47%', top: '50%' }} />\n            : (\n              <div className=\"margin-top-24\" id=\"partnerSection\">\n                <p className=\"font-muli-16 bold margin-btm-16\">Pilih metode pembayaran</p>\n\n                {/* Struktur looping fix ketika real end point sudah ready */}\n\n                {isNotUndefinedAndNotEmpty(paymentMethod.e_money) ? (\n                  <div>\n                    <p className=\"font-muli-300 margin-btm-16\">E-Money</p>\n                    <div id=\"secondSection\" className=\"horizontal-scroll margin-btm-32\">\n                      {paymentMethod.e_money.map((item, index) => (\n                        <img id={`emon${index}`} src={item.icon} className=\"payment-method-card\" onClick={() => showDialog('E-Money', item.icon, item.id, custId, cartItemId, orderId)} />\n                      ))}\n                    </div>\n                  </div>\n                ) : null}\n                {isNotUndefinedAndNotEmpty(paymentMethod.bank_transfer) ? (\n                  <div>\n                    <p className=\"font-muli-300 margin-btm-16\">Bank Transfer</p>\n                    <div id=\"secondSection\" className=\"horizontal-scroll margin-btm-32\">\n                      {paymentMethod.bank_transfer.map((item, index) => (\n                        <img id={`bank${index}`} src={item.icon} className=\"payment-method-card\" onClick={() => showDialog('Bank Transfer', item.icon, item.id, custId, cartItemId, orderId)} />\n                      ))}\n                    </div>\n                  </div>\n                ) : null}\n                {isNotUndefinedAndNotEmpty(paymentMethod.virtual_account) ? (\n                  <div>\n                    <p className=\"font-muli-300 margin-btm-16\">Virtual Account</p>\n                    <div id=\"secondSection\" className=\"horizontal-scroll margin-btm-32\">\n                      {paymentMethod.virtual_account.map((item, index) => (\n                        <img id={`conv${index}`} src={item.icon} className=\"payment-method-card\" onClick={() => showDialog('Virtual Account', item.icon, item.id, custId, cartItemId, orderId)} />\n                      ))}\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            )}\n          <ConfirmationDialogPaymentMethod />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar, showDialog,\n};\n\nexport default connect(null, mapDispatchToProps)(PaymentMethod);\n"]},"metadata":{},"sourceType":"module"}