{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react'; // material\n\nimport Grid from '@material-ui/core/Grid';\nimport { Divider } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // component\n\nimport { connect } from 'react-redux';\nimport { getRupiah } from '../utils/Calculate';\nimport { isNotUndefinedAndNotEmpty } from '../utils/Validator';\nimport ConfirmationDialogPaymentMethod from './ConfirmationDialogPaymentMethod'; // redux\n\nimport { showSnackbar } from '../redux/snackbar/action';\nimport { showDialog } from '../redux/paymentMethod/action';\nimport ButtonBack from './global-component/ButtonBack';\nimport { AuthNetworkCall } from '../utils/NetworkCall';\nexport var PaymentMethod = /*#__PURE__*/function (_Component) {\n  _inherits(PaymentMethod, _Component);\n\n  var _super = _createSuper(PaymentMethod);\n\n  function PaymentMethod(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentMethod);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      paymentMethod: {},\n      cartItemId: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(PaymentMethod, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.addCartItemIdToArray(this.props.cartDetail);\n      this.getPaymentMethodList();\n    }\n    /**\n     * @method getPaymentMethodList\n     * @summary get all list payment method\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"getPaymentMethodList\",\n    value: function () {\n      var _getPaymentMethodList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return AuthNetworkCall('/payment_method/available_payment_method', 'get', this.props.showSnackbar);\n\n              case 2:\n                result = _context.sent;\n\n                if (result) {\n                  this.setState({\n                    paymentMethod: result\n                  });\n                }\n\n                this.setState({\n                  isLoading: false\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getPaymentMethodList() {\n        return _getPaymentMethodList.apply(this, arguments);\n      }\n\n      return getPaymentMethodList;\n    }()\n    /**\n     * @method addCartItemIdToArray\n     * @summary this method to split card item id to array because we need that to create order\n     */\n\n  }, {\n    key: \"addCartItemIdToArray\",\n    value: function addCartItemIdToArray(cartDetail) {\n      var _this2 = this;\n\n      cartDetail.items.map(function (item) {\n        return _this2.state.cartItemId.push(item.id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          paymentMethod = _this$state.paymentMethod,\n          cartItemId = _this$state.cartItemId,\n          isLoading = _this$state.isLoading;\n      var _this$props = this.props,\n          cartDetail = _this$props.cartDetail,\n          orderId = _this$props.orderId;\n      var showDialog = this.props.showDialog;\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"main-content\",\n        id: \"mainContent\"\n      }, __jsx(ButtonBack, {\n        onClick: this.props.onClose\n      }), __jsx(Divider, null), __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        className: \"margin-top-24 margin-btm-24 txt-center-ver\"\n      }, __jsx(Grid, null, __jsx(\"p\", {\n        className: \"font-muli-300\"\n      }, \"Total tagihan\")), __jsx(Grid, null, __jsx(\"p\", {\n        id: \"orderId\",\n        className: \"font-muli-800 bold txt-end\"\n      }, getRupiah(cartDetail.total)))), __jsx(Divider, null), isLoading ? __jsx(CircularProgress, {\n        style: {\n          position: 'absolute',\n          left: '47%',\n          top: '50%'\n        }\n      }) : __jsx(\"div\", {\n        className: \"margin-top-24\",\n        id: \"partnerSection\"\n      }, __jsx(\"p\", {\n        className: \"font-muli-16 bold margin-btm-16\"\n      }, \"Pilih metode pembayaran\"), isNotUndefinedAndNotEmpty(paymentMethod.e_money) ? __jsx(\"div\", null, __jsx(\"p\", {\n        className: \"font-muli-300 margin-btm-16\"\n      }, \"E-Money\"), __jsx(\"div\", {\n        id: \"secondSection\",\n        className: \"horizontal-scroll margin-btm-32\"\n      }, paymentMethod.e_money.map(function (item, index) {\n        return __jsx(\"img\", {\n          id: \"emon\".concat(index),\n          src: item.icon,\n          className: \"payment-method-card\",\n          onClick: function onClick() {\n            return showDialog('E-Money', item.icon, item.id, cartItemId, orderId);\n          }\n        });\n      }))) : null, isNotUndefinedAndNotEmpty(paymentMethod.bank_transfer) ? __jsx(\"div\", null, __jsx(\"p\", {\n        className: \"font-muli-300 margin-btm-16\"\n      }, \"Bank Transfer\"), __jsx(\"div\", {\n        id: \"secondSection\",\n        className: \"horizontal-scroll margin-btm-32\"\n      }, paymentMethod.bank_transfer.map(function (item, index) {\n        return __jsx(\"img\", {\n          id: \"bank\".concat(index),\n          src: item.icon,\n          className: \"payment-method-card\",\n          onClick: function onClick() {\n            return showDialog('Bank Transfer', item.icon, item.id, cartItemId, orderId);\n          }\n        });\n      }))) : null, isNotUndefinedAndNotEmpty(paymentMethod.virtual_account) ? __jsx(\"div\", null, __jsx(\"p\", {\n        className: \"font-muli-300 margin-btm-16\"\n      }, \"Virtual Account\"), __jsx(\"div\", {\n        id: \"secondSection\",\n        className: \"horizontal-scroll margin-btm-32\"\n      }, paymentMethod.virtual_account.map(function (item, index) {\n        return __jsx(\"img\", {\n          id: \"conv\".concat(index),\n          src: item.icon,\n          className: \"payment-method-card\",\n          onClick: function onClick() {\n            return showDialog('Virtual Account', item.icon, item.id, cartItemId, orderId);\n          }\n        });\n      }))) : null), __jsx(ConfirmationDialogPaymentMethod, null)));\n    }\n  }]);\n\n  return PaymentMethod;\n}(Component);\nvar mapDispatchToProps = {\n  showSnackbar: showSnackbar,\n  showDialog: showDialog\n};\nexport default connect(null, mapDispatchToProps)(PaymentMethod);","map":null,"metadata":{},"sourceType":"module"}