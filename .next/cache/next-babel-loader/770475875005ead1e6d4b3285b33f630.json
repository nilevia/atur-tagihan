{"ast":null,"code":"var _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/components/global-component/GSnackbar.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { clearSnackbar } from '../../redux/snackbar/action';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { connect } from \"react-redux\";\n/**\n * @class GSnackbar\n * @summary this class is for global snackbar that will show up above layout page\n * so transition would be smooth\n * @param call using redux actions showSnackbar(message, {info or error} )\n * @returns {*}\n * @constructor\n */\n\nexport class GSnackbar extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClose\", () => {\n      const {\n        clearSnackbar\n      } = this.props;\n      clearSnackbar();\n    });\n\n    this.state = {};\n  }\n\n  render() {\n    const {\n      snackbarOpen,\n      snackbarMessage,\n      snackbarType,\n      isPermanent\n    } = this.props.Snackbar;\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, __jsx(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: snackbarOpen,\n      autoHideDuration: isPermanent ? 10000 : 3000,\n      onClose: () => this.handleClose(),\n      \"aria-describedby\": \"client-snackbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, __jsx(MuiAlert, {\n      elevation: 20,\n      style: {\n        alignItems: 'center',\n        textAlign: 'center'\n      },\n      variant: \"filled\",\n      onClose: () => this.handleClose(),\n      severity: snackbarType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, snackbarMessage)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  Snackbar: state.Snackbar\n});\n\nconst mapDispatchToProps = {\n  clearSnackbar\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GSnackbar);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/components/global-component/GSnackbar.js"],"names":["React","Fragment","Component","Snackbar","clearSnackbar","MuiAlert","connect","GSnackbar","constructor","props","state","render","snackbarOpen","snackbarMessage","snackbarType","isPermanent","vertical","horizontal","handleClose","alignItems","textAlign","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,SAAN,SAAwBL,SAAxB,CAAiC;AAEtCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yCAOL,MAAM;AAClB,YAAM;AAACL,QAAAA;AAAD,UAAkB,KAAKK,KAA7B;AACAL,MAAAA,aAAa;AACd,KAVkB;;AAEjB,SAAKM,KAAL,GAAa,EAAb;AAGD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,YAAD;AAAeC,MAAAA,eAAf;AAAgCC,MAAAA,YAAhC;AAA8CC,MAAAA;AAA9C,QAA6D,KAAKN,KAAL,CAAWN,QAA9E;AACA,WACA,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZa,QAAAA,QAAQ,EAAE,KADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAEL,YALR;AAME,MAAA,gBAAgB,EAAEG,WAAW,GAAE,KAAF,GAAU,IANzC;AAOE,MAAA,OAAO,EAAE,MAAM,KAAKG,WAAL,EAPjB;AAQE,0BAAiB,iBARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,MAAC,QAAD;AACE,MAAA,SAAS,EAAE,EADb;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,QAAd;AAAwBC,QAAAA,SAAS,EAAE;AAAnC,OAFT;AAGE,MAAA,OAAO,EAAC,QAHV;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKF,WAAL,EAJjB;AAKE,MAAA,QAAQ,EAAEJ,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGD,eAPH,CAVF,CADF,CADA;AAwBD;;AAvCqC;;AA0CxC,MAAMQ,eAAe,GAAIX,KAAD,KAAY;AAClCP,EAAAA,QAAQ,EAAEO,KAAK,CAACP;AADkB,CAAZ,CAAxB;;AAIA,MAAMmB,kBAAkB,GAAG;AACzBlB,EAAAA;AADyB,CAA3B;AAIA,eAAeE,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cf,SAA7C,CAAf","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {clearSnackbar} from '../../redux/snackbar/action';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { connect } from \"react-redux\";\n\n/**\n * @class GSnackbar\n * @summary this class is for global snackbar that will show up above layout page\n * so transition would be smooth\n * @param call using redux actions showSnackbar(message, {info or error} )\n * @returns {*}\n * @constructor\n */\nexport class GSnackbar extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  handleClose = () => {\n    const {clearSnackbar} = this.props\n    clearSnackbar()\n  }\n  render() {\n    const {snackbarOpen, snackbarMessage, snackbarType, isPermanent} = this.props.Snackbar\n    return (\n    <Fragment>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        open={snackbarOpen}\n        autoHideDuration={isPermanent? 10000 : 3000}\n        onClose={() => this.handleClose()}\n        aria-describedby=\"client-snackbar\"\n      >\n        <MuiAlert\n          elevation={20}\n          style={{ alignItems: 'center', textAlign: 'center' }}\n          variant=\"filled\"\n          onClose={() => this.handleClose()}\n          severity={snackbarType}\n        >\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n    </Fragment>\n  );\n  }\n\n}\nconst mapStateToProps = (state) => ({\n  Snackbar: state.Snackbar,\n});\n\nconst mapDispatchToProps = {\n  clearSnackbar,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GSnackbar);\n"]},"metadata":{},"sourceType":"module"}