{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { isNotUndefined } from './Validator'; // notes\n// ada masalah dengan react hooks sehingga showSnackbar dijadikan\n// parameter dan disupply dari component\n// unit test selanjutnya tidak perlu mengetes skenario error, hanya sukses\n\n/**\n * @summary memanggil api tanpa auth\n * @param path (url setelah api/v1\n * @param method\n * @param showSnackbar (ambil dari props redux)\n * @param dataRequest (bisa dikosongi)\n * @param headers (bisa dikosongi)\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nexport function CommonNetworkCall(_x, _x2, _x3) {\n  return _CommonNetworkCall.apply(this, arguments);\n}\n/**\n * @summary call api using auth that placed at header, if get 401 we should call refresh token\n * but now then refresh token end point not ready yet, so we directly go to login page and clear storage\n * @param path\n * @param method\n * @param showSnackbar\n * @param dataRequest\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\n_c2 = CommonNetworkCall;\n\nfunction _CommonNetworkCall() {\n  _CommonNetworkCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, method, showSnackbar) {\n    var dataRequest,\n        headers,\n        BASE_URL,\n        url,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataRequest = _args.length > 3 && _args[3] !== undefined ? _args[3] : '';\n            headers = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};\n            BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n            url = \"\".concat(BASE_URL).concat(path); // eslint-disable-next-line no-use-before-define,no-return-await\n\n            _context.next = 6;\n            return axiosService(method, url, dataRequest, headers).then(function (apiResponse) {\n              var _apiResponse$data = apiResponse.data,\n                  response = _apiResponse$data.response,\n                  result = _apiResponse$data.result;\n\n              if (response.code !== '000000') {\n                showSnackbar('Terjadi Gangguan', 'error');\n                return null;\n              }\n\n              return result;\n            })[\"catch\"](function (error) {\n              if (isNotUndefined(error.response)) {\n                var data = error.response.data;\n                showSnackbar(data.response.user_errors, 'error');\n              } else {\n                showSnackbar(error.toString(), 'error');\n              }\n\n              return null;\n            });\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _CommonNetworkCall.apply(this, arguments);\n}\n\n_c = CommonNetworkCall;\nexport function AuthNetworkCall(_x4, _x5, _x6) {\n  return _AuthNetworkCall.apply(this, arguments);\n}\n_c4 = AuthNetworkCall;\n\nfunction _AuthNetworkCall() {\n  _AuthNetworkCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(path, method, showSnackbar) {\n    var dataRequest,\n        BASE_URL,\n        url,\n        token,\n        headers,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dataRequest = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : '';\n            BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n            url = \"\".concat(BASE_URL).concat(path);\n            token = JSON.parse(localStorage.getItem('token'));\n\n            if (!token) {\n              _context2.next = 8;\n              break;\n            }\n\n            headers = {\n              Authorization: \"Bearer \".concat(token.access_token)\n            };\n            _context2.next = 10;\n            break;\n\n          case 8:\n            doLogout(showSnackbar);\n            return _context2.abrupt(\"return\", null);\n\n          case 10:\n            _context2.next = 12;\n            return axiosService(method, url, dataRequest, headers).then(function (apiResponse) {\n              var _apiResponse$data2 = apiResponse.data,\n                  response = _apiResponse$data2.response,\n                  result = _apiResponse$data2.result;\n\n              if (response.code !== '000000') {\n                showSnackbar('Terjadi Gangguan', 'error');\n                return null;\n              }\n\n              return result;\n            })[\"catch\"](function (error) {\n              if (isNotUndefined(error.response)) {\n                var data = error.response.data;\n\n                if (error.response.status === 401) {\n                  doLogout(showSnackbar);\n                } else showSnackbar(data.response.user_errors, 'error');\n              } else {\n                showSnackbar(error.toString(), 'error');\n              }\n\n              return null;\n            });\n\n          case 12:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _AuthNetworkCall.apply(this, arguments);\n}\n\n_c3 = AuthNetworkCall;\n\nfunction doLogout(showSnackbar) {\n  showSnackbar('Terjadi masalah, silahkan login terlebih dahulu', 'error');\n  localStorage.clear();\n  Router.push('/login');\n}\n\nfunction axiosService(method, url) {\n  var dataRequest = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  switch (method) {\n    case 'get':\n      return axios.get(url, {\n        headers: headers\n      });\n\n    case 'post':\n      return axios.post(url, dataRequest, {\n        headers: headers\n      });\n\n    case 'delete':\n      return axios[\"delete\"](url, {\n        headers: headers\n      });\n\n    case 'put':\n      return axios.put(url, dataRequest, {\n        headers: headers\n      });\n\n    default:\n      return axios();\n  }\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CommonNetworkCall\");\n$RefreshReg$(_c2, \"CommonNetworkCall\");\n$RefreshReg$(_c3, \"AuthNetworkCall\");\n$RefreshReg$(_c4, \"AuthNetworkCall\");","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/utils/NetworkCall.js"],"names":["React","axios","Router","isNotUndefined","CommonNetworkCall","path","method","showSnackbar","dataRequest","headers","BASE_URL","process","env","NEXT_PUBLIC_API_BASE_URL","url","axiosService","then","apiResponse","data","response","result","code","error","user_errors","toString","AuthNetworkCall","token","JSON","parse","localStorage","getItem","Authorization","access_token","doLogout","status","clear","push","get","post","put"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { isNotUndefined } from './Validator';\n\n// notes\n// ada masalah dengan react hooks sehingga showSnackbar dijadikan\n// parameter dan disupply dari component\n// unit test selanjutnya tidak perlu mengetes skenario error, hanya sukses\n\n/**\n * @summary memanggil api tanpa auth\n * @param path (url setelah api/v1\n * @param method\n * @param showSnackbar (ambil dari props redux)\n * @param dataRequest (bisa dikosongi)\n * @param headers (bisa dikosongi)\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\n\nexport async function CommonNetworkCall(path, method, showSnackbar, dataRequest = '', headers = {}) {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  // eslint-disable-next-line no-use-before-define,no-return-await\n  return await axiosService(method, url, dataRequest, headers)\n    .then((apiResponse) => {\n      const { response, result } = apiResponse.data;\n\n      if (response.code !== '000000') {\n        showSnackbar('Terjadi Gangguan', 'error');\n        return null;\n      }\n      return result;\n    })\n    .catch((error) => {\n      if (isNotUndefined(error.response)) {\n        const { data } = error.response;\n        showSnackbar(data.response.user_errors, 'error');\n      } else {\n        showSnackbar(error.toString(), 'error');\n      }\n      return null;\n    });\n}\n\n/**\n * @summary call api using auth that placed at header, if get 401 we should call refresh token\n * but now then refresh token end point not ready yet, so we directly go to login page and clear storage\n * @param path\n * @param method\n * @param showSnackbar\n * @param dataRequest\n * @returns {Promise<AxiosResponse<any>>}\n * @constructor\n */\nexport async function AuthNetworkCall(path, method, showSnackbar, dataRequest = '') {\n  const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n  const url = `${BASE_URL}${path}`;\n\n  const token = JSON.parse(localStorage.getItem('token'));\n  let headers;\n  if (token) {\n    headers = { Authorization: `Bearer ${token.access_token}` };\n  } else {\n    doLogout(showSnackbar);\n    return null;\n  }\n  // };\n\n  // eslint-disable-next-line no-use-before-define,no-return-await\n  return await axiosService(method, url, dataRequest, headers)\n    .then((apiResponse) => {\n      const { response, result } = apiResponse.data;\n\n      if (response.code !== '000000') {\n        showSnackbar('Terjadi Gangguan', 'error');\n        return null;\n      }\n      return result;\n    })\n    .catch((error) => {\n      if (isNotUndefined(error.response)) {\n        const { data } = error.response;\n        if (error.response.status === 401) {\n          doLogout(showSnackbar);\n        } else showSnackbar(data.response.user_errors, 'error');\n      } else {\n        showSnackbar(error.toString(), 'error');\n      }\n      return null;\n    });\n}\n\nfunction doLogout(showSnackbar) {\n  showSnackbar('Terjadi masalah, silahkan login terlebih dahulu', 'error');\n  localStorage.clear();\n  Router.push('/login');\n}\n\nfunction axiosService(method, url, dataRequest = '', headers = {}) {\n  switch (method) {\n    case 'get':\n      return axios.get(url, { headers });\n    case 'post':\n      return axios.post(url, dataRequest, { headers });\n    case 'delete':\n      return axios.delete(url, { headers });\n    case 'put':\n      return axios.put(url, dataRequest, { headers });\n    default:\n      return axios();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}