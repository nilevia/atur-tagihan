{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Router from 'next/router'; // material\n\nimport { Divider } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar'; // component\\\n\nimport { connect } from 'react-redux';\nimport ButtonBack from '../../components/global-component/ButtonBack';\nimport ButtonMain from '../../components/global-component/ButtonMain';\nimport { meterValidation, phoneReplace, phoneValidation } from '../../utils/Validator';\nimport ProductItem from '../../components/additional-product/ProductItem'; // redux\n\nimport { showSnackbar } from '../../redux/snackbar/action';\nimport { getRupiah } from '../../utils/Calculate';\nimport { BlockDialog } from '../../components/global-component/BlockDialog';\nimport { AuthNetworkCall } from '../../utils/NetworkCall';\nexport class TokenListrik extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isLoadingPriceList: true,\n      errorMeterNumber: false,\n      errorPhoneNumber: false,\n      displayContent: 1,\n      phoneNumber: '',\n      meterNumber: '',\n      priceList: [],\n      inquiryData: {\n        product_name: '-',\n        amount: '-',\n        data: {\n          subscriber_name: '-',\n          material_number: '-',\n          subscriber_id: '-',\n          subscriber_segmentation: '-',\n          power: '-',\n          phone_number: '-'\n        }\n      },\n      isAturTagihan: false\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.background = 'white';\n    this.getPriceList();\n  }\n\n  componentWillUnmount() {\n    document.body.style = null;\n  }\n  /**\n   * @method phoneNumberWatcher\n   * @summary this function will do a simple validation for phone number\n   * then will set button enable\n   * @param event\n   */\n\n\n  async phoneNumberWatcher(event) {\n    const {\n      value\n    } = event.target; // change input to match format\n\n    await this.setState({\n      phoneNumber: phoneReplace(value)\n    });\n    const {\n      phoneNumber\n    } = this.state;\n\n    if (phoneNumber.length < 1) {\n      this.setState({\n        errorPhoneNumber: false\n      });\n    } else {\n      this.setState({\n        errorPhoneNumber: !phoneValidation(phoneNumber)\n      });\n    }\n  }\n  /**\n   * @method meterNumberWatcher\n   * @summary this method will do validation for each input on nomor meter form\n   * */\n\n\n  async meterNumberWatcher(event) {\n    const {\n      value\n    } = event.target;\n    await this.setState({\n      meterNumber: value\n    });\n\n    if (value.length < 1 || meterValidation(value)) {\n      this.setState({\n        errorMeterNumber: false\n      });\n    } else {\n      this.setState({\n        errorMeterNumber: true\n      });\n    }\n  }\n  /**\n   * @method getPriceList\n   * @summary get pricelist of electricity (id 6)\n   *\n   * */\n\n\n  async getPriceList() {\n    const result = await AuthNetworkCall('/product_type/6/products', 'get', this.props.showSnackbar);\n    if (result) this.setState({\n      priceList: result\n    });\n    this.setState({\n      isLoadingPriceList: false\n    });\n  }\n  /**\n   * @method inquiry\n   * @summary this method is dummy\n   */\n\n\n  async inquiry(priceId) {\n    const {\n      showSnackbar\n    } = this.props;\n    const {\n      phoneNumber,\n      meterNumber,\n      errorPhoneNumber,\n      errorMeterNumber\n    } = this.state;\n    if (meterNumber === '') showSnackbar('Nomor meter belum di isi', 'error');else if (phoneNumber === '') showSnackbar('Nomor telepon belum di isi', 'error');else if (errorMeterNumber || errorPhoneNumber) showSnackbar('Masukkan nomor meter dan telepon dengan benar', 'error');else {\n      // do inquiry here\n      this.setState({\n        isLoading: true\n      });\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      const data = JSON.stringify({\n        order_identifier: meterNumber,\n        price_id: priceId,\n        phone_number: phoneNumber\n      });\n      const result = await AuthNetworkCall('/inquiry', 'post', this.props.showSnackbar, data, headers);\n\n      if (result) {\n        this.setState({\n          displayContent: 2\n        });\n        this.setState({\n          inquiryData: result\n        });\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n  /**\n   * @method addToCart\n   * @summary add selected item to cart by post using\n   * order_idenifier : idpel\n   *customer_id, and price_id\n   * @returns {Promise<void>}\n   */\n\n\n  async addToCart() {\n    const {\n      price_id,\n      order_identifier\n    } = this.state.inquiryData;\n    this.setState({\n      isLoading: true\n    });\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const data = JSON.stringify({\n      price_id,\n      order_identifier\n    });\n    const result = await AuthNetworkCall('/cart', 'post', this.props.showSnackbar, data, headers);\n\n    if (result) {\n      Router.push('/keranjang');\n    }\n\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  render() {\n    const {\n      errorMeterNumber,\n      isLoading,\n      isLoadingPriceList,\n      phoneNumber,\n      meterNumber,\n      displayContent,\n      errorPhoneNumber,\n      priceList,\n      inquiryData\n    } = this.state;\n    let content;\n\n    if (displayContent === 1) {\n      content = __jsx(\"div\", {\n        id: \"firstContent\"\n      }, __jsx(ButtonBack, {\n        id: \"btnBack\",\n        onClick: () => Router.back()\n      }), __jsx(Divider, null), __jsx(\"div\", {\n        className: \"margin-top-24 margin-btm-24\"\n      }, __jsx(\"p\", {\n        className: \"font-muli-18 bold margin-btm-16\"\n      }, \"Token Listrik\"), __jsx(TextField, {\n        id: \"meterNumberField\",\n        placeholder: \"contoh: 123456789123\",\n        fullWidth: true,\n        margin: \"dense\",\n        InputProps: {\n          disableUnderline: true\n        },\n        inputProps: {\n          maxLength: 12\n        },\n        label: \"Masukkan nomor meter Anda\",\n        variant: \"filled\",\n        color: \"primary\",\n        onChange: event => this.meterNumberWatcher(event),\n        value: meterNumber,\n        error: errorMeterNumber,\n        helperText: errorMeterNumber ? 'Dalam bentuk angka, 11 - 12 digit' : ''\n      }), __jsx(TextField, {\n        id: \"phoneNumberField\",\n        placeholder: \"contoh: 081234567891\",\n        fullWidth: true,\n        margin: \"dense\",\n        inputProps: {\n          maxLength: 13\n        },\n        label: \"Masukkan nomor handphone\",\n        variant: \"filled\",\n        color: \"primary\",\n        onChange: event => this.phoneNumberWatcher(event),\n        error: errorPhoneNumber,\n        helperText: errorPhoneNumber ? 'Nomor telepon 11 sampai 13 digit' : '',\n        value: phoneNumber,\n        InputProps: {\n          disableUnderline: true\n        }\n      })), __jsx(\"div\", {\n        className: \"additional-product-content\"\n      }, isLoadingPriceList ? __jsx(CircularProgress, {\n        style: {\n          position: 'relative',\n          left: '45%'\n        }\n      }) : priceList.map((item, index) => __jsx(ProductItem, {\n        id: `item${index}`,\n        title: item.product_name,\n        desc: item.product_desc,\n        price: item.sell_price,\n        onClick: () => this.inquiry(item.id)\n      }))));\n    } else if (displayContent === 2) {\n      content = __jsx(\"div\", {\n        id: \"secondContent\"\n      }, __jsx(ButtonBack, {\n        id: \"btnBack\",\n        onClick: () => this.setState({\n          displayContent: 1\n        })\n      }), __jsx(Divider, null), __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        className: \"margin-top-16 txt-center-ver margin-btm-16\"\n      }, __jsx(Grid, null, __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\"\n      }, \"Nama pelanggan\"), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\"\n      }, \"No Meter\"), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\"\n      }, \"ID Pelanggan\"), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\"\n      }, \"Daya\"), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\"\n      }, \"No Handphone\")), __jsx(Grid, null, __jsx(\"p\", {\n        className: \"font-muli-14 bold txt-end margin-btm-16\"\n      }, inquiryData.data.subscriber_name), __jsx(\"p\", {\n        className: \"font-muli-14 bold txt-end margin-btm-16\"\n      }, inquiryData.data.material_number), __jsx(\"p\", {\n        className: \"font-muli-14 bold txt-end margin-btm-16\"\n      }, inquiryData.data.subscriber_id), __jsx(\"p\", {\n        className: \"font-muli-14 bold txt-end margin-btm-16\"\n      }, `${inquiryData.data.subscriber_segmentation} / ${inquiryData.data.power} Watt`), __jsx(\"p\", {\n        className: \"font-muli-14 bold txt-end margin-btm-16\"\n      }, inquiryData.data.phone_number))), __jsx(\"div\", {\n        className: \"padding-16 common-border margin-btm-16\"\n      }, __jsx(\"p\", {\n        className: \"font-muli-14 bold\"\n      }, inquiryData.product_name), __jsx(\"p\", {\n        className: \"font-muli-12\"\n      }, getRupiah(inquiryData.amount))), __jsx(Divider, null), __jsx(\"div\", {\n        className: \" margin-btm-16\"\n      }), __jsx(\"p\", {\n        className: \"font-muli-14\"\n      }, \"* Ketika transaksi berhasil, kami akan mengirimkan token ke nomor handphone anda.\"), __jsx(AppBar, {\n        position: \"fixed\",\n        style: {\n          top: 'auto',\n          bottom: 0,\n          backgroundColor: '#fff'\n        }\n      }, __jsx(Toolbar, null, __jsx(ButtonMain, {\n        className: \"margin-btm-16\",\n        size: \"large\",\n        id: \"addToCart\",\n        color: \"primary\",\n        width: \"fullWidth\",\n        onClick: () => this.addToCart()\n      }, \"Tambahkan Ke Tagihan\"))));\n    }\n\n    return __jsx(\"div\", {\n      className: \"main-content\",\n      id: \"mainContent\"\n    }, content, __jsx(BlockDialog, {\n      isOpen: isLoading\n    }));\n  }\n\n}\nconst mapDispatchToProps = {\n  showSnackbar\n};\nexport default connect(null, mapDispatchToProps)(TokenListrik);","map":null,"metadata":{},"sourceType":"module"}