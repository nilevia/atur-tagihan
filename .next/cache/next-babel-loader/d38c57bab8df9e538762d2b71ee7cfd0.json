{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/components/global-component/GSnackbar.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment, Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { clearSnackbar } from '../../redux/snackbar/action';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { connect } from \"react-redux\";\n/**\n * @class GSnackbar\n * @summary this class is for global snackbar that will show up above layout page\n * so transition would be smooth\n * @param call using redux actions showSnackbar(message, {info or error} )\n * @returns {*}\n * @constructor\n */\n\nexport var GSnackbar = /*#__PURE__*/function (_Component) {\n  _inherits(GSnackbar, _Component);\n\n  var _super = _createSuper(GSnackbar);\n\n  function GSnackbar(props) {\n    var _this;\n\n    _classCallCheck(this, GSnackbar);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      var clearSnackbar = _this.props.clearSnackbar;\n      clearSnackbar();\n    });\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(GSnackbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$Snackbar = this.props.Snackbar,\n          snackbarOpen = _this$props$Snackbar.snackbarOpen,\n          snackbarMessage = _this$props$Snackbar.snackbarMessage,\n          snackbarType = _this$props$Snackbar.snackbarType,\n          isPermanent = _this$props$Snackbar.isPermanent;\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }\n      }, __jsx(Snackbar, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        open: snackbarOpen,\n        autoHideDuration: isPermanent ? 1000000 : 3000,\n        onClose: function onClose() {\n          return _this2.handleClose();\n        },\n        \"aria-describedby\": \"client-snackbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, __jsx(MuiAlert, {\n        elevation: 20,\n        style: {\n          alignItems: 'center',\n          textAlign: 'center'\n        },\n        variant: \"filled\",\n        onClose: function onClose() {\n          return _this2.handleClose();\n        },\n        severity: snackbarType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, snackbarMessage)));\n    }\n  }]);\n\n  return GSnackbar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    Snackbar: state.Snackbar\n  };\n};\n\nvar mapDispatchToProps = {\n  clearSnackbar: clearSnackbar\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GSnackbar);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/components/global-component/GSnackbar.js"],"names":["React","Fragment","Component","Snackbar","clearSnackbar","MuiAlert","connect","GSnackbar","props","state","snackbarOpen","snackbarMessage","snackbarType","isPermanent","vertical","horizontal","handleClose","alignItems","textAlign","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAaC,SAAb;AAAA;;AAAA;;AAEE,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,kEAOL,YAAM;AAAA,UACXJ,aADW,GACM,MAAKI,KADX,CACXJ,aADW;AAElBA,MAAAA,aAAa;AACd,KAVkB;;AAEjB,UAAKK,KAAL,GAAa,EAAb;AAFiB;AAKlB;;AAPH;AAAA;AAAA,6BAaW;AAAA;;AAAA,iCAC4D,KAAKD,KAAL,CAAWL,QADvE;AAAA,UACAO,YADA,wBACAA,YADA;AAAA,UACcC,eADd,wBACcA,eADd;AAAA,UAC+BC,YAD/B,wBAC+BA,YAD/B;AAAA,UAC6CC,WAD7C,wBAC6CA,WAD7C;AAEP,aACA,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AACE,QAAA,YAAY,EAAE;AACZC,UAAAA,QAAQ,EAAE,KADE;AAEZC,UAAAA,UAAU,EAAE;AAFA,SADhB;AAKE,QAAA,IAAI,EAAEL,YALR;AAME,QAAA,gBAAgB,EAAEG,WAAW,GAAE,OAAF,GAAY,IAN3C;AAOE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACG,WAAL,EAAN;AAAA,SAPX;AAQE,4BAAiB,iBARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,MAAC,QAAD;AACE,QAAA,SAAS,EAAE,EADb;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,QAAd;AAAwBC,UAAAA,SAAS,EAAE;AAAnC,SAFT;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACF,WAAL,EAAN;AAAA,SAJX;AAKE,QAAA,QAAQ,EAAEJ,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGD,eAPH,CAVF,CADF,CADA;AAwBD;AAvCH;;AAAA;AAAA,EAA+BT,SAA/B;;AA0CA,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACV,KAAD;AAAA,SAAY;AAClCN,IAAAA,QAAQ,EAAEM,KAAK,CAACN;AADkB,GAAZ;AAAA,CAAxB;;AAIA,IAAMiB,kBAAkB,GAAG;AACzBhB,EAAAA,aAAa,EAAbA;AADyB,CAA3B;AAIA,eAAeE,OAAO,CAACa,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cb,SAA7C,CAAf","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {clearSnackbar} from '../../redux/snackbar/action';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { connect } from \"react-redux\";\n\n/**\n * @class GSnackbar\n * @summary this class is for global snackbar that will show up above layout page\n * so transition would be smooth\n * @param call using redux actions showSnackbar(message, {info or error} )\n * @returns {*}\n * @constructor\n */\nexport class GSnackbar extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  handleClose = () => {\n    const {clearSnackbar} = this.props\n    clearSnackbar()\n  }\n  render() {\n    const {snackbarOpen, snackbarMessage, snackbarType, isPermanent} = this.props.Snackbar\n    return (\n    <Fragment>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        open={snackbarOpen}\n        autoHideDuration={isPermanent? 1000000 : 3000}\n        onClose={() => this.handleClose()}\n        aria-describedby=\"client-snackbar\"\n      >\n        <MuiAlert\n          elevation={20}\n          style={{ alignItems: 'center', textAlign: 'center' }}\n          variant=\"filled\"\n          onClose={() => this.handleClose()}\n          severity={snackbarType}\n        >\n          {snackbarMessage}\n        </MuiAlert>\n      </Snackbar>\n    </Fragment>\n  );\n  }\n\n}\nconst mapStateToProps = (state) => ({\n  Snackbar: state.Snackbar,\n});\n\nconst mapDispatchToProps = {\n  clearSnackbar,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GSnackbar);\n"]},"metadata":{},"sourceType":"module"}