{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/otnielvictoryfa/task2020/atur-tagihan/components/ConfirmationDialogPaymentMethod.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router'; // Material\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // Redux\n\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { showDialog, clearDialog } from '../redux/paymentMethod/action';\nimport { showSnackbar } from '../redux/snackbar/action'; // Component\n\nimport ButtonMain from './global-component/ButtonMain';\nimport { isNotUndefined } from '../utils/Validator';\nimport { getPaymentMethod } from '../redux/selector';\nexport var ConfirmationDialogPaymentMethod = /*#__PURE__*/function (_Component) {\n  _inherits(ConfirmationDialogPaymentMethod, _Component);\n\n  var _super = _createSuper(ConfirmationDialogPaymentMethod);\n\n  function ConfirmationDialogPaymentMethod(props) {\n    var _this;\n\n    _classCallCheck(this, ConfirmationDialogPaymentMethod);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(ConfirmationDialogPaymentMethod, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.props.clearDialog();\n    }\n  }, {\n    key: \"createOrder\",\n    value: function () {\n      var _createOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(customerId, itemCartId, paymentMethodId, orderId) {\n        var _this2 = this;\n\n        var showSnackbar, BASE_URL, url, headers, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.setState({\n                  isLoading: true\n                });\n                showSnackbar = this.props.showSnackbar;\n                BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n                url = \"\".concat(BASE_URL, \"/order/atur_tagihan\");\n                headers = {\n                  'Content-Type': 'application/json'\n                };\n                data = JSON.stringify({\n                  customer_id: parseInt(customerId, 10),\n                  cart_id: itemCartId,\n                  payment_method_id: paymentMethodId\n                });\n                _context2.next = 8;\n                return axios.post(url, data, {\n                  headers: headers\n                }).then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(apiResponse) {\n                    var response;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            response = apiResponse.data.response;\n\n                            if (response.code !== '000000') {\n                              showSnackbar('Terjadi Gangguan', 'error');\n                            } else {\n                              Router.push(\"/status-pembayaran/\".concat(orderId));\n                            }\n\n                            _this2.setState({\n                              isLoading: false\n                            });\n\n                          case 3:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x5) {\n                    return _ref.apply(this, arguments);\n                  };\n                }())[\"catch\"](function (error) {\n                  if (isNotUndefined(error.response)) {\n                    var _data = error.response.data;\n                    showSnackbar(_data.response.user_errors, 'error');\n                  } else {\n                    showSnackbar(error.toString(), 'error');\n                  }\n\n                  _this2.setState({\n                    isLoading: false\n                  });\n                });\n\n              case 8:\n                this.handleClose();\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createOrder(_x, _x2, _x3, _x4) {\n        return _createOrder.apply(this, arguments);\n      }\n\n      return createOrder;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props$PaymentMe = this.props.PaymentMethod,\n          dialogOpen = _this$props$PaymentMe.dialogOpen,\n          groupPayment = _this$props$PaymentMe.groupPayment,\n          paymentLogo = _this$props$PaymentMe.paymentLogo,\n          paymentId = _this$props$PaymentMe.paymentId,\n          customerId = _this$props$PaymentMe.customerId,\n          itemCartId = _this$props$PaymentMe.itemCartId,\n          orderId = _this$props$PaymentMe.orderId;\n      var isLoading = this.state.isLoading;\n      return __jsx(Dialog, {\n        disableBackdropClick: true,\n        open: dialogOpen,\n        fullWidth: true,\n        maxWidth: \"xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, __jsx(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        className: \"font-muli-18 bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, \"Konfirmasi\"), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"Apakah anda yakin ingin menggunakan :\"), __jsx(\"p\", {\n        className: \"font-muli-14 margin-btm-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, groupPayment), __jsx(\"img\", {\n        src: paymentLogo,\n        className: \"payment-method-diaglog-image margin-btm-32\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }), isLoading ? __jsx(CircularProgress, {\n        style: {\n          position: 'sticky',\n          left: '47%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }) : __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, __jsx(ButtonMain, {\n        id: \"btnClose\",\n        onClick: function onClick() {\n          return _this3.handleClose();\n        },\n        color: \"secondary\",\n        width: \"fullWidth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, \"Kembali\")), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, __jsx(ButtonMain, {\n        id: \"btnNext\",\n        onClick: function onClick() {\n          return _this3.createOrder(customerId, itemCartId, paymentId, orderId);\n        },\n        color: \"primary\",\n        width: \"fullWidth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, \"Lanjutkan\")))));\n    }\n  }]);\n\n  return ConfirmationDialogPaymentMethod;\n}(Component);\nConfirmationDialogPaymentMethod.propTypes = {\n  clearDialog: PropTypes.func.isRequired,\n  PaymentMethod: PropTypes.shape({\n    dialogOpen: PropTypes.bool,\n    groupPayment: PropTypes.string,\n    paymentLogo: PropTypes.string,\n    paymentId: PropTypes.number,\n    itemCartId: PropTypes.string,\n    customerId: PropTypes.number\n  }).isRequired\n}; // dirubah menggunakan selector untuk unit test lebih baik\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    PaymentMethod: state.PaymentMethod\n  };\n};\n\nvar mapDispatchToProps = {\n  showDialog: showDialog,\n  clearDialog: clearDialog,\n  showSnackbar: showSnackbar\n};\nexport default connect(function (state) {\n  return {\n    PaymentMethod: getPaymentMethod(state)\n  };\n}, mapDispatchToProps)(ConfirmationDialogPaymentMethod);","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/components/ConfirmationDialogPaymentMethod.js"],"names":["React","Component","PropTypes","Router","Dialog","DialogContent","CircularProgress","connect","Grid","axios","showDialog","clearDialog","showSnackbar","ButtonMain","isNotUndefined","getPaymentMethod","ConfirmationDialogPaymentMethod","props","state","isLoading","customerId","itemCartId","paymentMethodId","orderId","setState","BASE_URL","process","env","NEXT_PUBLIC_API_BASE_URL","url","headers","data","JSON","stringify","customer_id","parseInt","cart_id","payment_method_id","post","then","apiResponse","response","code","push","error","user_errors","toString","handleClose","PaymentMethod","dialogOpen","groupPayment","paymentLogo","paymentId","position","left","createOrder","propTypes","func","isRequired","shape","bool","string","number","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\n\n// Material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\n\nimport axios from 'axios';\nimport { showDialog, clearDialog } from '../redux/paymentMethod/action';\nimport { showSnackbar } from '../redux/snackbar/action';\n\n// Component\nimport ButtonMain from './global-component/ButtonMain';\nimport { isNotUndefined } from '../utils/Validator';\nimport { getPaymentMethod } from '../redux/selector';\n\nexport class ConfirmationDialogPaymentMethod extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  handleClose() {\n    this.props.clearDialog();\n  }\n\n  async createOrder(customerId, itemCartId, paymentMethodId, orderId) {\n    this.setState({ isLoading: true });\n    const { showSnackbar } = this.props;\n\n    const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;\n    const url = `${BASE_URL}/order/atur_tagihan`;\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const data = JSON.stringify({\n      customer_id: parseInt(customerId, 10),\n      cart_id: itemCartId,\n      payment_method_id: paymentMethodId,\n    });\n    await axios\n      .post(url, data, { headers })\n      .then(async (apiResponse) => {\n        const { response } = apiResponse.data;\n        if (response.code !== '000000') {\n          showSnackbar('Terjadi Gangguan', 'error');\n        } else {\n          Router.push(`/status-pembayaran/${orderId}`);\n        }\n        this.setState({ isLoading: false });\n      }).catch((error) => {\n        if (isNotUndefined(error.response)) {\n          const { data } = error.response;\n          showSnackbar(data.response.user_errors, 'error');\n        } else {\n          showSnackbar(error.toString(), 'error');\n        }\n        this.setState({ isLoading: false });\n      });\n    this.handleClose();\n  }\n\n  render() {\n    const {\n      dialogOpen, groupPayment, paymentLogo, paymentId, customerId, itemCartId, orderId,\n    } = this.props.PaymentMethod;\n    const { isLoading } = this.state;\n    return (\n      <Dialog\n        disableBackdropClick\n        open={dialogOpen}\n        fullWidth\n        maxWidth=\"xs\"\n      >\n        <DialogContent>\n          <p className=\"font-muli-18 bold\">Konfirmasi</p>\n          <p className=\"font-muli-14 margin-btm-16\">Apakah anda yakin ingin menggunakan :</p>\n          <p className=\"font-muli-14 margin-btm-16\">{groupPayment}</p>\n          <img src={paymentLogo} className=\"payment-method-diaglog-image margin-btm-32\" />\n\n          {isLoading ? (\n            <CircularProgress style={{ position: 'sticky', left: '47%' }} />\n          ) : (\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              spacing={2}\n            >\n              <Grid item xs={6}>\n                <ButtonMain id=\"btnClose\" onClick={() => this.handleClose()} color=\"secondary\" width=\"fullWidth\">Kembali</ButtonMain>\n              </Grid>\n              <Grid item xs={6}>\n                <ButtonMain id=\"btnNext\" onClick={() => this.createOrder(customerId, itemCartId, paymentId, orderId)} color=\"primary\" width=\"fullWidth\">Lanjutkan</ButtonMain>\n              </Grid>\n            </Grid>\n          )}\n\n        </DialogContent>\n\n      </Dialog>\n\n    );\n  }\n}\nConfirmationDialogPaymentMethod.propTypes = {\n  clearDialog: PropTypes.func.isRequired,\n  PaymentMethod: PropTypes.shape({\n    dialogOpen: PropTypes.bool,\n    groupPayment: PropTypes.string,\n    paymentLogo: PropTypes.string,\n    paymentId: PropTypes.number,\n    itemCartId: PropTypes.string,\n    customerId: PropTypes.number,\n  }).isRequired,\n};\n\n// dirubah menggunakan selector untuk unit test lebih baik\nconst mapStateToProps = (state) => ({\n  PaymentMethod: state.PaymentMethod,\n});\n\nconst mapDispatchToProps = {\n  showDialog, clearDialog, showSnackbar,\n};\n\nexport default connect((state) => ({ PaymentMethod: getPaymentMethod(state) }), mapDispatchToProps)(ConfirmationDialogPaymentMethod);\n"]},"metadata":{},"sourceType":"module"}