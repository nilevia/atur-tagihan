{"ast":null,"code":"import axios from 'axios';\n/**\n * @summary this method is used to call flagr api with simple call\n * will return whether it enable or disable based on id given\n * @param id\n */\n\nexport async function featureEnable(id) {\n  let enabled = false; // const BASE_URL = getConfig().publicRuntimeConfig.NEXT_PUBLIC_API_FLAGR_URL;\n\n  const BASE_URL = process.env.NEXT_PUBLIC_API_FLAGR_URL;\n  const url = `${BASE_URL}flags/${id}`;\n  await axios.get(url).then(apiResponse => {\n    enabled = apiResponse.data.enabled;\n  }).catch(() => {\n    enabled = false;\n  });\n  return enabled;\n}","map":{"version":3,"sources":["/Users/otnielvictoryfa/task2020/atur-tagihan/utils/Flagr.js"],"names":["axios","featureEnable","id","enabled","BASE_URL","process","env","NEXT_PUBLIC_API_FLAGR_URL","url","get","then","apiResponse","data","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,aAAf,CAA6BC,EAA7B,EAAiC;AACtC,MAAIC,OAAO,GAAG,KAAd,CADsC,CAEtC;;AACA,QAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA7B;AACA,QAAMC,GAAG,GAAI,GAAEJ,QAAS,SAAQF,EAAG,EAAnC;AAEA,QAAMF,KAAK,CACRS,GADG,CACCD,GADD,EAEHE,IAFG,CAEGC,WAAD,IAAiB;AACrBR,IAAAA,OAAO,GAAGQ,WAAW,CAACC,IAAZ,CAAiBT,OAA3B;AACD,GAJG,EAKHU,KALG,CAKG,MAAM;AACXV,IAAAA,OAAO,GAAG,KAAV;AACD,GAPG,CAAN;AASA,SAAOA,OAAP;AACD","sourcesContent":["import axios from 'axios';\n/**\n * @summary this method is used to call flagr api with simple call\n * will return whether it enable or disable based on id given\n * @param id\n */\n\nexport async function featureEnable(id) {\n  let enabled = false;\n  // const BASE_URL = getConfig().publicRuntimeConfig.NEXT_PUBLIC_API_FLAGR_URL;\n  const BASE_URL = process.env.NEXT_PUBLIC_API_FLAGR_URL;\n  const url = `${BASE_URL}flags/${id}`;\n\n  await axios\n    .get(url)\n    .then((apiResponse) => {\n      enabled = apiResponse.data.enabled;\n    })\n    .catch(() => {\n      enabled = false;\n    });\n\n  return enabled;\n}\n"]},"metadata":{},"sourceType":"module"}